name: Publish Packages on NPM
on: workflow_dispatch

jobs:
  release_stable:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Releasing...
        uses: actions/github-script@v4
        id: set-next-ver
        with:
          script: |
            const { version } = require('./lerna.json');
            const ver = version.replace(
              /(\d+)\.(\d+)\.(\d+)/, (_, a, b, c) => a + '-' + (parseInt(b) + 1)
            );
            return `release-${ver}`
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          npx lerna-changelog
          git add .
          git commit -m "chore: changelog ${{steps.set-next-ver.outputs.result}}"
          yarn release-stable --yes
          git checkout -b ${{steps.set-next-ver.outputs.result}}
          git push origin ${{steps.set-next-ver.outputs.result}}
        env:
          GITHUB_AUTH: ${{ secrets.AUTH }}


  release_patch:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'release-')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Releasing...
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          npx lerna-changelog
          git add .
          git commit -m "chore: changelog ${{steps.set-next-ver.outputs.result}}"
          yarn release-patch --yes
          CURRENT_BRANCH=`git branch --show-current`
          git checkout main
          git merge $CURRENT_BRANCH
          git push origin main
        env:
          GITHUB_AUTH: ${{ secrets.AUTH }}
