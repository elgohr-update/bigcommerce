/* tslint:disable */
/* eslint-disable */
/**
 * Store Information
 * Get Store Information endpoint, manage store profile settings.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    TimeStampFull,
    TimeStampFullFromJSON,
    TimeStampFullToJSON,
} from '../models';

export interface TimeGetRequest {
    accept: string;
    contentType: string;
}

/**
 * 
 */
export class TimeZoneApi extends runtime.BaseAPI {

    /**
     * Returns the system timestamp at the time of the request. The time resource is useful for validating API authentication details and testing client connections.
     * Get System Timestamp
     */
    async timeGetRaw(requestParameters: TimeGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TimeStampFull>> {
        if (requestParameters.accept === null || requestParameters.accept === undefined) {
            throw new runtime.RequiredError('accept','Required parameter requestParameters.accept was null or undefined when calling timeGet.');
        }

        if (requestParameters.contentType === null || requestParameters.contentType === undefined) {
            throw new runtime.RequiredError('contentType','Required parameter requestParameters.contentType was null or undefined when calling timeGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/time`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TimeStampFullFromJSON(jsonValue));
    }

    /**
     * Returns the system timestamp at the time of the request. The time resource is useful for validating API authentication details and testing client connections.
     * Get System Timestamp
     */
    async timeGet(requestParameters: TimeGetRequest, initOverrides?: RequestInit): Promise<TimeStampFull> {
        const response = await this.timeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
