/* tslint:disable */
/* eslint-disable */
/**
 * Store Information
 * Get Store Information endpoint, manage store profile settings.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * + `stencil_enabled`: `true` (boolean)
 *     + `sitewidehttps_enabled`: `false` (boolean)
 *     + `facebook_catalog_id` (string)
 * @export
 * @interface StoreInformationFeatures
 */
export interface StoreInformationFeatures {
    /**
     * Indicates whether a store is using a Stencil theme.
     * @type {boolean}
     * @memberof StoreInformationFeatures
     */
    stencilEnabled?: boolean;
    /**
     * Indicates if there is sitewide https.
     * @type {string}
     * @memberof StoreInformationFeatures
     */
    sitewidehttpsEnabled?: string;
    /**
     * Id of the facebook catalog. If there is none, it returns an empty string. 
     * @type {string}
     * @memberof StoreInformationFeatures
     */
    facebookCatalogId?: string;
    /**
     * What type of checkout is enabled on the store. Possible values returned are optimized, single (one page), single_customizable (one page for developers), klarna.
     * @type {string}
     * @memberof StoreInformationFeatures
     */
    checkoutType?: string;
}

export function StoreInformationFeaturesFromJSON(json: any): StoreInformationFeatures {
    return StoreInformationFeaturesFromJSONTyped(json, false);
}

export function StoreInformationFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreInformationFeatures {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stencilEnabled': !exists(json, 'stencil_enabled') ? undefined : json['stencil_enabled'],
        'sitewidehttpsEnabled': !exists(json, 'sitewidehttps_enabled') ? undefined : json['sitewidehttps_enabled'],
        'facebookCatalogId': !exists(json, 'facebook_catalog_id') ? undefined : json['facebook_catalog_id'],
        'checkoutType': !exists(json, 'checkout_type') ? undefined : json['checkout_type'],
    };
}

export function StoreInformationFeaturesToJSON(value?: StoreInformationFeatures | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stencil_enabled': value.stencilEnabled,
        'sitewidehttps_enabled': value.sitewidehttpsEnabled,
        'facebook_catalog_id': value.facebookCatalogId,
        'checkout_type': value.checkoutType,
    };
}


