/* tslint:disable */
/* eslint-disable */
/**
 * Pricing
 * Get product pricing.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/pricing/products host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes | UI Name  | Permission | Parameter                     | |----------|------------|-------------------------------| | Products | read-only  | `store_v2_products_read_only` |
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponse200SalePrice,
    InlineResponse200SalePriceFromJSON,
    InlineResponse200SalePriceFromJSONTyped,
    InlineResponse200SalePriceToJSON,
} from './';

/**
 * For estimated prices, the minimum/maximum price that will typically apply to this product
 * @export
 * @interface PriceRange
 */
export interface PriceRange {
    /**
     * 
     * @type {InlineResponse200SalePrice}
     * @memberof PriceRange
     */
    minimum?: InlineResponse200SalePrice;
    /**
     * 
     * @type {InlineResponse200SalePrice}
     * @memberof PriceRange
     */
    maximum?: InlineResponse200SalePrice;
}

export function PriceRangeFromJSON(json: any): PriceRange {
    return PriceRangeFromJSONTyped(json, false);
}

export function PriceRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minimum': !exists(json, 'minimum') ? undefined : InlineResponse200SalePriceFromJSON(json['minimum']),
        'maximum': !exists(json, 'maximum') ? undefined : InlineResponse200SalePriceFromJSON(json['maximum']),
    };
}

export function PriceRangeToJSON(value?: PriceRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minimum': InlineResponse200SalePriceToJSON(value.minimum),
        'maximum': InlineResponse200SalePriceToJSON(value.maximum),
    };
}


