/* tslint:disable */
/* eslint-disable */
/**
 * Pricing
 * Get product pricing.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/pricing/products host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes | UI Name  | Permission | Parameter                     | |----------|------------|-------------------------------| | Products | read-only  | `store_v2_products_read_only` |
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineResponse200Options
 */
export interface InlineResponse200Options {
    /**
     * The ID of the variant option or modifier option configured for this price
     * @type {number}
     * @memberof InlineResponse200Options
     */
    optionId?: number;
    /**
     * The selected value ID for the configured option.
     * @type {number}
     * @memberof InlineResponse200Options
     */
    valueId?: number;
}

export function InlineResponse200OptionsFromJSON(json: any): InlineResponse200Options {
    return InlineResponse200OptionsFromJSONTyped(json, false);
}

export function InlineResponse200OptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200Options {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'optionId': !exists(json, 'option_id') ? undefined : json['option_id'],
        'valueId': !exists(json, 'value_id') ? undefined : json['value_id'],
    };
}

export function InlineResponse200OptionsToJSON(value?: InlineResponse200Options | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'option_id': value.optionId,
        'value_id': value.valueId,
    };
}


