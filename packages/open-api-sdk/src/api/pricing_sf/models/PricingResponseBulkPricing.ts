/* tslint:disable */
/* eslint-disable */
/**
 * Pricing
 * Get product pricing.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/pricing/products host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes | UI Name  | Permission | Parameter                     | |----------|------------|-------------------------------| | Products | read-only  | `store_v2_products_read_only` |
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PricingResponseBulkPricing
 */
export interface PricingResponseBulkPricing {
    /**
     * The minumum quantity required to trigger this bulk pricing discount
     * @type {number}
     * @memberof PricingResponseBulkPricing
     */
    minimum?: number;
    /**
     * The maximum quantity (or 0 for unlimited) to trigger this bulk pricing discount
     * @type {number}
     * @memberof PricingResponseBulkPricing
     */
    maximum?: number;
    /**
     * 
     * @type {number}
     * @memberof PricingResponseBulkPricing
     */
    discountAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof PricingResponseBulkPricing
     */
    discountType?: PricingResponseBulkPricingDiscountTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum PricingResponseBulkPricingDiscountTypeEnum {
    Price = 'price',
    Percent = 'percent',
    Fixed = 'fixed'
}

export function PricingResponseBulkPricingFromJSON(json: any): PricingResponseBulkPricing {
    return PricingResponseBulkPricingFromJSONTyped(json, false);
}

export function PricingResponseBulkPricingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PricingResponseBulkPricing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
        'discountAmount': !exists(json, 'discount_amount') ? undefined : json['discount_amount'],
        'discountType': !exists(json, 'discount_type') ? undefined : json['discount_type'],
    };
}

export function PricingResponseBulkPricingToJSON(value?: PricingResponseBulkPricing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minimum': value.minimum,
        'maximum': value.maximum,
        'discount_amount': value.discountAmount,
        'discount_type': value.discountType,
    };
}


