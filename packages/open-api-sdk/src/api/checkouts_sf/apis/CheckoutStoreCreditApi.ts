/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Checkouts
 * Manage checkout operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CheckoutsResp,
    CheckoutsRespFromJSON,
    CheckoutsRespToJSON,
} from '../models';

export interface CheckoutStoreCreditAddRequest {
    checkoutId: string;
}

export interface CheckoutsStoreCreditRemoveRequest {
    checkoutId: string;
}

/**
 * 
 */
export class CheckoutStoreCreditApi extends runtime.BaseAPI {

    /**
     * Applies any available store credit to a checkout. As on the storefront, all available store credit will be used (up to the value of the order) and no amount need be specified.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">  > ### Note > The Send a Test Request feature is not currently supported for this endpoint.  </div> </div> </div>
     * Add Store Credit
     */
    async checkoutStoreCreditAddRaw(requestParameters: CheckoutStoreCreditAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CheckoutsResp>> {
        if (requestParameters.checkoutId === null || requestParameters.checkoutId === undefined) {
            throw new runtime.RequiredError('checkoutId','Required parameter requestParameters.checkoutId was null or undefined when calling checkoutStoreCreditAdd.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/checkouts/{checkoutId}/store-credit`.replace(`{${"checkoutId"}}`, encodeURIComponent(String(requestParameters.checkoutId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CheckoutsRespFromJSON(jsonValue));
    }

    /**
     * Applies any available store credit to a checkout. As on the storefront, all available store credit will be used (up to the value of the order) and no amount need be specified.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">  > ### Note > The Send a Test Request feature is not currently supported for this endpoint.  </div> </div> </div>
     * Add Store Credit
     */
    async checkoutStoreCreditAdd(requestParameters: CheckoutStoreCreditAddRequest, initOverrides?: RequestInit): Promise<CheckoutsResp> {
        const response = await this.checkoutStoreCreditAddRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Removes store credit from a checkout.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">  > ### Note > The Send a Test Request feature is not currently supported for this endpoint.  </div> </div> </div>
     * Remove Store Credit
     */
    async checkoutsStoreCreditRemoveRaw(requestParameters: CheckoutsStoreCreditRemoveRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.checkoutId === null || requestParameters.checkoutId === undefined) {
            throw new runtime.RequiredError('checkoutId','Required parameter requestParameters.checkoutId was null or undefined when calling checkoutsStoreCreditRemove.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/checkouts/{checkoutId}/store-credit`.replace(`{${"checkoutId"}}`, encodeURIComponent(String(requestParameters.checkoutId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Removes store credit from a checkout.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">  > ### Note > The Send a Test Request feature is not currently supported for this endpoint.  </div> </div> </div>
     * Remove Store Credit
     */
    async checkoutsStoreCreditRemove(requestParameters: CheckoutsStoreCreditRemoveRequest, initOverrides?: RequestInit): Promise<object> {
        const response = await this.checkoutsStoreCreditRemoveRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
