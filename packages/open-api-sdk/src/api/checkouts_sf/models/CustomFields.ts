/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Checkouts
 * Manage checkout operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.
 * @export
 * @interface CustomFields
 */
export interface CustomFields {
    /**
     * 
     * @type {string}
     * @memberof CustomFields
     */
    fieldId?: string;
    /**
     * This can also be an array for fields that need to support list of values (e.g., a set of check boxes.). When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.
     * @type {string}
     * @memberof CustomFields
     */
    fieldValue?: string;
}

export function CustomFieldsFromJSON(json: any): CustomFields {
    return CustomFieldsFromJSONTyped(json, false);
}

export function CustomFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFields {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldId': !exists(json, 'fieldId') ? undefined : json['fieldId'],
        'fieldValue': !exists(json, 'fieldValue') ? undefined : json['fieldValue'],
    };
}

export function CustomFieldsToJSON(value?: CustomFields | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldId': value.fieldId,
        'fieldValue': value.fieldValue,
    };
}


