/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Checkouts
 * Manage checkout operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemCustom,
    ItemCustomFromJSON,
    ItemCustomFromJSONTyped,
    ItemCustomToJSON,
    ItemDigital,
    ItemDigitalFromJSON,
    ItemDigitalFromJSONTyped,
    ItemDigitalToJSON,
    ItemGiftCertificate,
    ItemGiftCertificateFromJSON,
    ItemGiftCertificateFromJSONTyped,
    ItemGiftCertificateToJSON,
    ItemPhysical,
    ItemPhysicalFromJSON,
    ItemPhysicalFromJSONTyped,
    ItemPhysicalToJSON,
} from './';

/**
 * 
 * @export
 * @interface LineItem
 */
export interface LineItem {
    /**
     * 
     * @type {Array<ItemPhysical>}
     * @memberof LineItem
     */
    physicalItems: Array<ItemPhysical>;
    /**
     * 
     * @type {Array<ItemDigital>}
     * @memberof LineItem
     */
    digitalItems: Array<ItemDigital>;
    /**
     * 
     * @type {Array<ItemGiftCertificate>}
     * @memberof LineItem
     */
    giftCertificate?: Array<ItemGiftCertificate>;
    /**
     * 
     * @type {Array<ItemCustom>}
     * @memberof LineItem
     */
    customItems?: Array<ItemCustom>;
}

export function LineItemFromJSON(json: any): LineItem {
    return LineItemFromJSONTyped(json, false);
}

export function LineItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): LineItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'physicalItems': ((json['physicalItems'] as Array<any>).map(ItemPhysicalFromJSON)),
        'digitalItems': ((json['digitalItems'] as Array<any>).map(ItemDigitalFromJSON)),
        'giftCertificate': !exists(json, 'giftCertificate') ? undefined : ((json['giftCertificate'] as Array<any>).map(ItemGiftCertificateFromJSON)),
        'customItems': !exists(json, 'customItems') ? undefined : ((json['customItems'] as Array<any>).map(ItemCustomFromJSON)),
    };
}

export function LineItemToJSON(value?: LineItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'physicalItems': ((value.physicalItems as Array<any>).map(ItemPhysicalToJSON)),
        'digitalItems': ((value.digitalItems as Array<any>).map(ItemDigitalToJSON)),
        'giftCertificate': value.giftCertificate === undefined ? undefined : ((value.giftCertificate as Array<any>).map(ItemGiftCertificateToJSON)),
        'customItems': value.customItems === undefined ? undefined : ((value.customItems as Array<any>).map(ItemCustomToJSON)),
    };
}


