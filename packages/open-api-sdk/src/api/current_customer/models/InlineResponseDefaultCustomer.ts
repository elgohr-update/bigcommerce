/* tslint:disable */
/* eslint-disable */
/**
 * Current Customer
 * Identify logged-in customers securely via JavaScript.  [Learn more about the current customer API](https://developer.bigcommerce.com/api-docs/customers/current-customer-api).  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">   > ### Note > The Send a Test Request feature is not currently supported for this endpoint.   </div> </div> </div>
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineResponseDefaultCustomer
 */
export interface InlineResponseDefaultCustomer {
    /**
     * Unique numeric ID of the customer.
     * @type {number}
     * @memberof InlineResponseDefaultCustomer
     */
    id?: number;
    /**
     * Email address of the customer.
     * @type {string}
     * @memberof InlineResponseDefaultCustomer
     */
    email?: string;
    /**
     * The group to which the customer belongs.
     * @type {string}
     * @memberof InlineResponseDefaultCustomer
     */
    groupId?: string;
}

export function InlineResponseDefaultCustomerFromJSON(json: any): InlineResponseDefaultCustomer {
    return InlineResponseDefaultCustomerFromJSONTyped(json, false);
}

export function InlineResponseDefaultCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponseDefaultCustomer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'groupId': !exists(json, 'group_id') ? undefined : json['group_id'],
    };
}

export function InlineResponseDefaultCustomerToJSON(value?: InlineResponseDefaultCustomer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email': value.email,
        'group_id': value.groupId,
    };
}


