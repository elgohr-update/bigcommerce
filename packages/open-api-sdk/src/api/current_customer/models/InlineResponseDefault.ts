/* tslint:disable */
/* eslint-disable */
/**
 * Current Customer
 * Identify logged-in customers securely via JavaScript.  [Learn more about the current customer API](https://developer.bigcommerce.com/api-docs/customers/current-customer-api).  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--info\"> <div class=\"HubBlock-content\">   > ### Note > The Send a Test Request feature is not currently supported for this endpoint.   </div> </div> </div>
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponseDefaultCustomer,
    InlineResponseDefaultCustomerFromJSON,
    InlineResponseDefaultCustomerFromJSONTyped,
    InlineResponseDefaultCustomerToJSON,
} from './';

/**
 * 
 * @export
 * @interface InlineResponseDefault
 */
export interface InlineResponseDefault {
    /**
     * 
     * @type {InlineResponseDefaultCustomer}
     * @memberof InlineResponseDefault
     */
    customer?: InlineResponseDefaultCustomer;
    /**
     * Indicates the token’s issuer. This is your application’s client ID, which is obtained during application registration in Developer Portal.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    iss?: string;
    /**
     * The subject of the JWT - same as `store_hash`.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    sub?: string;
    /**
     * Time when the token was generated. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).
     * @type {number}
     * @memberof InlineResponseDefault
     */
    iat?: number;
    /**
     * Time when the token expires. The token usually expires after 15 minutes. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).
     * @type {number}
     * @memberof InlineResponseDefault
     */
    exp?: number;
    /**
     * Version of the Current Customer JWT
     * @type {number}
     * @memberof InlineResponseDefault
     */
    version?: number;
    /**
     * The "aud" (audience) claim identifies the recipients that the JWT is intended for. This should match the *App Client ID* and the `application_id`.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    aud?: string;
    /**
     * The client ID created when the token was generated.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    applicationId?: string;
    /**
     * Store hash identifying the store you are logging into.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    storeHash?: string;
    /**
     * Must contain the string “current_customer”.
     * @type {string}
     * @memberof InlineResponseDefault
     */
    operation?: string;
}

export function InlineResponseDefaultFromJSON(json: any): InlineResponseDefault {
    return InlineResponseDefaultFromJSONTyped(json, false);
}

export function InlineResponseDefaultFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponseDefault {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'customer') ? undefined : InlineResponseDefaultCustomerFromJSON(json['customer']),
        'iss': !exists(json, 'iss') ? undefined : json['iss'],
        'sub': !exists(json, 'sub') ? undefined : json['sub'],
        'iat': !exists(json, 'iat') ? undefined : json['iat'],
        'exp': !exists(json, 'exp') ? undefined : json['exp'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'aud': !exists(json, 'aud') ? undefined : json['aud'],
        'applicationId': !exists(json, 'application_id') ? undefined : json['application_id'],
        'storeHash': !exists(json, 'store_hash') ? undefined : json['store_hash'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
    };
}

export function InlineResponseDefaultToJSON(value?: InlineResponseDefault | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': InlineResponseDefaultCustomerToJSON(value.customer),
        'iss': value.iss,
        'sub': value.sub,
        'iat': value.iat,
        'exp': value.exp,
        'version': value.version,
        'aud': value.aud,
        'application_id': value.applicationId,
        'store_hash': value.storeHash,
        'operation': value.operation,
    };
}


