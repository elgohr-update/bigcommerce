/* tslint:disable */
/* eslint-disable */
/**
 * Shipping Providers
 * Implement endpoints consumed by BigCommerce for custom shipping integrations. To learn more, see [Shipping Provider API Overview](/api-docs/store-management/shipping/shipping-provider-api).  <div class=\"otp\" id=\"no-index\">  ### On this Page - [Authentication](#authentication) - [Subresources](#subresources) - [Additional Information](#additional-information)  </div>  ## Authentication This specification file describes API requests BigCommerce will make to a registered shipping carrier\'s server to check connection options and retrieve rates. As such, the method of authentication is determined by the carrier\'s server.  ## Subresources  ### Check Connection Options The Check Connection Options request is made by BigCommerce when checking for available shipping options. Each Shipping Provider will have different configurations for the payload.  ### Rate The Rate request is made by BigCommerce to get shipping quotes from the provider.  ## Additional Information  **Webhooks** - [Shipment](https://developer.bigcommerce.com/api-docs/getting-started/webhooks/webhook-events#shipment)  **Related API Resources** - [Shipping Provider](/api-reference/store-management/shipping-provider-api) - [Shipping Zones](/api-reference/store-management/shipping-api/shipping-zones) - [Shipping Methods](/api-reference/store-management/shipping-api/shipping-method) - [Shipping Carriers](/api-reference/store-management/shipping-api/shipping-carrier)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Object representing a destination or origin address for items.
 * @export
 * @interface ShippingAddress
 */
export interface ShippingAddress {
    /**
     * 
     * @type {string}
     * @memberof ShippingAddress
     */
    street1?: string;
    /**
     * 
     * @type {string}
     * @memberof ShippingAddress
     */
    street2?: string;
    /**
     * 
     * @type {string}
     * @memberof ShippingAddress
     */
    zip: string;
    /**
     * 
     * @type {string}
     * @memberof ShippingAddress
     */
    city?: string;
    /**
     * State in ISO_3166 2 format
     * @type {string}
     * @memberof ShippingAddress
     */
    stateIso2?: string;
    /**
     * Country in ISO_3166 2 format
     * @type {string}
     * @memberof ShippingAddress
     */
    countryIso2: string;
    /**
     * Optional, defaults to residential
     * @type {string}
     * @memberof ShippingAddress
     */
    addressType?: ShippingAddressAddressTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum ShippingAddressAddressTypeEnum {
    Residential = 'RESIDENTIAL',
    Commercial = 'COMMERCIAL'
}

export function ShippingAddressFromJSON(json: any): ShippingAddress {
    return ShippingAddressFromJSONTyped(json, false);
}

export function ShippingAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShippingAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'street1': !exists(json, 'street_1') ? undefined : json['street_1'],
        'street2': !exists(json, 'street_2') ? undefined : json['street_2'],
        'zip': json['zip'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'stateIso2': !exists(json, 'state_iso2') ? undefined : json['state_iso2'],
        'countryIso2': json['country_iso2'],
        'addressType': !exists(json, 'address_type') ? undefined : json['address_type'],
    };
}

export function ShippingAddressToJSON(value?: ShippingAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'street_1': value.street1,
        'street_2': value.street2,
        'zip': value.zip,
        'city': value.city,
        'state_iso2': value.stateIso2,
        'country_iso2': value.countryIso2,
        'address_type': value.addressType,
    };
}


