/* tslint:disable */
/* eslint-disable */
/**
 * Customers V3
 * Create and manage customers.  - [Authentication](#authentication) - [Resources](#resources)  ## Authentication  Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:  ```http GET /stores/{$$.env.store_hash}/v3/customers host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  ### OAuth Scopes  | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Customers                                    | modify     | `store_v2_customers`                          | | Customers                                    | read-only  | `store_v2_customers_read_only`                | | Stored Payment Instruments                   | modify     | `store_stored_payment_instruments`            | | Stored Payment Instruments                   | read-only  | `store_stored_payment_instruments_read_only`  |  For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Resources * [Customer and Subscribers Overview](/api-docs/customers/customers-subscribers-overview).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorResponse1
 */
export interface ErrorResponse1 {
    /**
     * The HTTP status code.
     * @type {number}
     * @memberof ErrorResponse1
     */
    status?: number;
    /**
     * The error title describing the particular error.
     * @type {string}
     * @memberof ErrorResponse1
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponse1
     */
    type?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ErrorResponse1
     */
    errors?: { [key: string]: string; };
}

export function ErrorResponse1FromJSON(json: any): ErrorResponse1 {
    return ErrorResponse1FromJSONTyped(json, false);
}

export function ErrorResponse1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
    };
}

export function ErrorResponse1ToJSON(value?: ErrorResponse1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'title': value.title,
        'type': value.type,
        'errors': value.errors,
    };
}


