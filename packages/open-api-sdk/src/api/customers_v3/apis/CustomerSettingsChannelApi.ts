/* tslint:disable */
/* eslint-disable */
/**
 * Customers V3
 * Create and manage customers.  - [Authentication](#authentication) - [Resources](#resources)  ## Authentication  Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:  ```http GET /stores/{$$.env.store_hash}/v3/customers host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  ### OAuth Scopes  | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Customers                                    | modify     | `store_v2_customers`                          | | Customers                                    | read-only  | `store_v2_customers_read_only`                | | Stored Payment Instruments                   | modify     | `store_stored_payment_instruments`            | | Stored Payment Instruments                   | read-only  | `store_stored_payment_instruments_read_only`  |  For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Resources * [Customer and Subscribers Overview](/api-docs/customers/customers-subscribers-overview).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CustomerChannelSettingsObject,
    CustomerChannelSettingsObjectFromJSON,
    CustomerChannelSettingsObjectToJSON,
    CustomerSettingsObject,
    CustomerSettingsObjectFromJSON,
    CustomerSettingsObjectToJSON,
} from '../models';

export interface CustomerSettingsChannelGetRequest {
    channelId: number;
}

export interface CustomerSettingsChannelPutRequest {
    channelId: number;
    customerChannelSettingsObject: CustomerChannelSettingsObject;
}

/**
 * 
 */
export class CustomerSettingsChannelApi extends runtime.BaseAPI {

    /**
     * Returns the customer settings per channel.  **Notes**   * `null` indicates that there is no override per given channel and values are inherited from the global level.
     * Get Customer Settings per Channel
     */
    async customerSettingsChannelGetRaw(requestParameters: CustomerSettingsChannelGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CustomerChannelSettingsObject>> {
        if (requestParameters.channelId === null || requestParameters.channelId === undefined) {
            throw new runtime.RequiredError('channelId','Required parameter requestParameters.channelId was null or undefined when calling customerSettingsChannelGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/customers/settings/channels/{channel_id}`.replace(`{${"channel_id"}}`, encodeURIComponent(String(requestParameters.channelId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomerChannelSettingsObjectFromJSON(jsonValue));
    }

    /**
     * Returns the customer settings per channel.  **Notes**   * `null` indicates that there is no override per given channel and values are inherited from the global level.
     * Get Customer Settings per Channel
     */
    async customerSettingsChannelGet(requestParameters: CustomerSettingsChannelGetRequest, initOverrides?: RequestInit): Promise<CustomerChannelSettingsObject> {
        const response = await this.customerSettingsChannelGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update the customer settings per channel  **Required Fields**  * `channel_id`  **Notes**  * Setting `null` will delete override per given channel and values will be inherited from the global level.
     * Update Customer Settings per Channel
     */
    async customerSettingsChannelPutRaw(requestParameters: CustomerSettingsChannelPutRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CustomerSettingsObject>> {
        if (requestParameters.channelId === null || requestParameters.channelId === undefined) {
            throw new runtime.RequiredError('channelId','Required parameter requestParameters.channelId was null or undefined when calling customerSettingsChannelPut.');
        }

        if (requestParameters.customerChannelSettingsObject === null || requestParameters.customerChannelSettingsObject === undefined) {
            throw new runtime.RequiredError('customerChannelSettingsObject','Required parameter requestParameters.customerChannelSettingsObject was null or undefined when calling customerSettingsChannelPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/customers/settings/channels/{channel_id}`.replace(`{${"channel_id"}}`, encodeURIComponent(String(requestParameters.channelId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CustomerChannelSettingsObjectToJSON(requestParameters.customerChannelSettingsObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomerSettingsObjectFromJSON(jsonValue));
    }

    /**
     * Update the customer settings per channel  **Required Fields**  * `channel_id`  **Notes**  * Setting `null` will delete override per given channel and values will be inherited from the global level.
     * Update Customer Settings per Channel
     */
    async customerSettingsChannelPut(requestParameters: CustomerSettingsChannelPutRequest, initOverrides?: RequestInit): Promise<CustomerSettingsObject> {
        const response = await this.customerSettingsChannelPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
