/* tslint:disable */
/* eslint-disable */
/**
 * Content
 * Manage blog posts, blog tags, content pages, and redirects.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--warning\"> <div class=\"HubBlock-content\">  ### Note * Redirects V2 are deprecated; use [V3 Redirects](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/getredirects) instead. * Pages V2 are deprecated; use [Pages V3](https://developer.bigcommerce.com/api-reference/store-management/pages) instead.   </div> </div> </div>
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Not returned in any responses, but accepts up to two fields allowing you to set the customerâ€™s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.
 * @export
 * @interface CustomerFullAuthentication
 */
export interface CustomerFullAuthentication {
    /**
     * 
     * @type {string}
     * @memberof CustomerFullAuthentication
     */
    forceReset?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerFullAuthentication
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerFullAuthentication
     */
    passwordConfirmation?: string;
}

export function CustomerFullAuthenticationFromJSON(json: any): CustomerFullAuthentication {
    return CustomerFullAuthenticationFromJSONTyped(json, false);
}

export function CustomerFullAuthenticationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerFullAuthentication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'forceReset': !exists(json, 'force_reset') ? undefined : json['force_reset'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'passwordConfirmation': !exists(json, 'password_confirmation') ? undefined : json['password_confirmation'],
    };
}

export function CustomerFullAuthenticationToJSON(value?: CustomerFullAuthentication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'force_reset': value.forceReset,
        'password': value.password,
        'password_confirmation': value.passwordConfirmation,
    };
}


