/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Cookie Consent
 * Specify shopper cookie consent preferences
 *
 * The version of the OpenAPI document: Storefront
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * List of allowed and denied consent categories. Must be populated with a complete set of allowed and denied categories.
 * 
 * Configurable categories are:
 * 
 * 2 - Functional
 * 3 - Analytics
 * 4 - Targeting; Advertising
 * 
 * For further definition of these categories, see [Scripts API](https://developer.bigcommerce.com/api-docs/store-management/scripts).
 * @export
 * @interface ConsentPreferences
 */
export interface ConsentPreferences {
    /**
     * Explicitly allowed consent categories. Allowed values are 2, 3, 4.
     * @type {Array<number>}
     * @memberof ConsentPreferences
     */
    allow: Array<ConsentPreferencesAllowEnum>;
    /**
     * Denied consent categories. Allowed values are 2, 3, 4.
     * @type {Array<number>}
     * @memberof ConsentPreferences
     */
    deny: Array<ConsentPreferencesDenyEnum>;
}

/**
* @export
* @enum {string}
*/
export enum ConsentPreferencesAllowEnum {
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4
}/**
* @export
* @enum {string}
*/
export enum ConsentPreferencesDenyEnum {
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4
}

export function ConsentPreferencesFromJSON(json: any): ConsentPreferences {
    return ConsentPreferencesFromJSONTyped(json, false);
}

export function ConsentPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsentPreferences {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allow': json['allow'],
        'deny': json['deny'],
    };
}

export function ConsentPreferencesToJSON(value?: ConsentPreferences | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allow': value.allow,
        'deny': value.deny,
    };
}


