/* tslint:disable */
/* eslint-disable */
/**
 * Subscribers
 * Manage subscribers.  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | | --- | --- | --- | |  Customers | modify | `store_v2_customers` | |  Customers | read-only | `store_v2_customers_read_only` |  ### Headers  |Header|Parameter|Description| |-|-|-| |`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.| |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  ### Example  ```http GET /stores/{$$.env.store_hash}/v3/catalog/summary host: api.bigcommerce.com Content-Type: application/json X-Auth-Client: {client_id} X-Auth-Token: {access_token} ```  * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CollectionMeta,
    CollectionMetaFromJSON,
    CollectionMetaFromJSONTyped,
    CollectionMetaToJSON,
    SubscriberFull,
    SubscriberFullFromJSON,
    SubscriberFullFromJSONTyped,
    SubscriberFullToJSON,
} from './';

/**
 * Response payload for the BigCommerce API.
 * @export
 * @interface SubscriberCollectionResponse
 */
export interface SubscriberCollectionResponse {
    /**
     * 
     * @type {Array<SubscriberFull>}
     * @memberof SubscriberCollectionResponse
     */
    data?: Array<SubscriberFull>;
    /**
     * 
     * @type {CollectionMeta}
     * @memberof SubscriberCollectionResponse
     */
    meta?: CollectionMeta;
}

export function SubscriberCollectionResponseFromJSON(json: any): SubscriberCollectionResponse {
    return SubscriberCollectionResponseFromJSONTyped(json, false);
}

export function SubscriberCollectionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriberCollectionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(SubscriberFullFromJSON)),
        'meta': !exists(json, 'meta') ? undefined : CollectionMetaFromJSON(json['meta']),
    };
}

export function SubscriberCollectionResponseToJSON(value?: SubscriberCollectionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(SubscriberFullToJSON)),
        'meta': CollectionMetaToJSON(value.meta),
    };
}


