/* tslint:disable */
/* eslint-disable */
/**
 * Settings V3
 * Manage settings and configuration for BigCommerce hosted stores and headless storefronts.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/settings/storefront/status host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | |-|-|-| |  Information & Settings | modify | `store_v2_information` | |  Information & Settings | read-only | `store_v2_information_read_only` |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@bigcommerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineObject
 */
export interface InlineObject {
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    abandonedCartEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    accountDetailsChangedEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    combinedOrderStatusEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    createAccountEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    createGuestAccountEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    giftCertificateEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    invoiceEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    orderMessageNotificationEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    returnConfirmationEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    returnStatuschangeEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof InlineObject
     */
    productReviewEmail?: any | null;
}

export function InlineObjectFromJSON(json: any): InlineObject {
    return InlineObjectFromJSONTyped(json, false);
}

export function InlineObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'abandonedCartEmail': !exists(json, 'abandoned_cart_email') ? undefined : json['abandoned_cart_email'],
        'accountDetailsChangedEmail': !exists(json, 'account_details_changed_email') ? undefined : json['account_details_changed_email'],
        'combinedOrderStatusEmail': !exists(json, 'combined_order_status_email') ? undefined : json['combined_order_status_email'],
        'createAccountEmail': !exists(json, 'create_account_email') ? undefined : json['create_account_email'],
        'createGuestAccountEmail': !exists(json, 'create_guest_account_email') ? undefined : json['create_guest_account_email'],
        'giftCertificateEmail': !exists(json, 'gift_certificate_email') ? undefined : json['gift_certificate_email'],
        'invoiceEmail': !exists(json, 'invoice_email') ? undefined : json['invoice_email'],
        'orderMessageNotificationEmail': !exists(json, 'order_message_notification_email') ? undefined : json['order_message_notification_email'],
        'returnConfirmationEmail': !exists(json, 'return_confirmation_email') ? undefined : json['return_confirmation_email'],
        'returnStatuschangeEmail': !exists(json, 'return_statuschange_email') ? undefined : json['return_statuschange_email'],
        'productReviewEmail': !exists(json, 'product_review_email') ? undefined : json['product_review_email'],
    };
}

export function InlineObjectToJSON(value?: InlineObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'abandoned_cart_email': value.abandonedCartEmail,
        'account_details_changed_email': value.accountDetailsChangedEmail,
        'combined_order_status_email': value.combinedOrderStatusEmail,
        'create_account_email': value.createAccountEmail,
        'create_guest_account_email': value.createGuestAccountEmail,
        'gift_certificate_email': value.giftCertificateEmail,
        'invoice_email': value.invoiceEmail,
        'order_message_notification_email': value.orderMessageNotificationEmail,
        'return_confirmation_email': value.returnConfirmationEmail,
        'return_statuschange_email': value.returnStatuschangeEmail,
        'product_review_email': value.productReviewEmail,
    };
}


