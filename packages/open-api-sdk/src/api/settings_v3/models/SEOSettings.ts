/* tslint:disable */
/* eslint-disable */
/**
 * Settings V3
 * Manage settings and configuration for BigCommerce hosted stores and headless storefronts.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/settings/storefront/status host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | |-|-|-| |  Information & Settings | modify | `store_v2_information` | |  Information & Settings | read-only | `store_v2_information_read_only` |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@bigcommerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SEOSettings
 */
export interface SEOSettings {
    /**
     * 
     * @type {string}
     * @memberof SEOSettings
     */
    pageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof SEOSettings
     */
    metaDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof SEOSettings
     */
    wwwRedirect?: SEOSettingsWwwRedirectEnum;
    /**
     * 
     * @type {string}
     * @memberof SEOSettings
     */
    metaKeywords?: string;
}

/**
* @export
* @enum {string}
*/
export enum SEOSettingsWwwRedirectEnum {
    Www = 'www',
    NoWww = 'no-www',
    None = 'none'
}

export function SEOSettingsFromJSON(json: any): SEOSettings {
    return SEOSettingsFromJSONTyped(json, false);
}

export function SEOSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SEOSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pageTitle': !exists(json, 'page_title') ? undefined : json['page_title'],
        'metaDescription': !exists(json, 'meta_description') ? undefined : json['meta_description'],
        'wwwRedirect': !exists(json, 'www_redirect') ? undefined : json['www_redirect'],
        'metaKeywords': !exists(json, 'meta_keywords') ? undefined : json['meta_keywords'],
    };
}

export function SEOSettingsToJSON(value?: SEOSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'page_title': value.pageTitle,
        'meta_description': value.metaDescription,
        'www_redirect': value.wwwRedirect,
        'meta_keywords': value.metaKeywords,
    };
}


