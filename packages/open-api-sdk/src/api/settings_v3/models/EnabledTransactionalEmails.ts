/* tslint:disable */
/* eslint-disable */
/**
 * Settings V3
 * Manage settings and configuration for BigCommerce hosted stores and headless storefronts.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/settings/storefront/status host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | |-|-|-| |  Information & Settings | modify | `store_v2_information` | |  Information & Settings | read-only | `store_v2_information_read_only` |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@bigcommerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EnabledTransactionalEmails
 */
export interface EnabledTransactionalEmails {
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    abandonedCartEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    accountDetailsChangedEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    combinedOrderStatusEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    createaccountEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    createguestaccountEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    giftcertificateEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    invoiceEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    ordermessageNotification?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    returnConfirmationEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    returnStatuschangeEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EnabledTransactionalEmails
     */
    productReviewEmail?: boolean;
}

export function EnabledTransactionalEmailsFromJSON(json: any): EnabledTransactionalEmails {
    return EnabledTransactionalEmailsFromJSONTyped(json, false);
}

export function EnabledTransactionalEmailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnabledTransactionalEmails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'abandonedCartEmail': !exists(json, 'abandoned_cart_email') ? undefined : json['abandoned_cart_email'],
        'accountDetailsChangedEmail': !exists(json, 'account_details_changed_email') ? undefined : json['account_details_changed_email'],
        'combinedOrderStatusEmail': !exists(json, 'combined_order_status_email') ? undefined : json['combined_order_status_email'],
        'createaccountEmail': !exists(json, 'createaccount_email') ? undefined : json['createaccount_email'],
        'createguestaccountEmail': !exists(json, 'createguestaccount_email') ? undefined : json['createguestaccount_email'],
        'giftcertificateEmail': !exists(json, 'giftcertificate_email') ? undefined : json['giftcertificate_email'],
        'invoiceEmail': !exists(json, 'invoice_email') ? undefined : json['invoice_email'],
        'ordermessageNotification': !exists(json, 'ordermessage_notification') ? undefined : json['ordermessage_notification'],
        'returnConfirmationEmail': !exists(json, 'return_confirmation_email') ? undefined : json['return_confirmation_email'],
        'returnStatuschangeEmail': !exists(json, 'return_statuschange_email') ? undefined : json['return_statuschange_email'],
        'productReviewEmail': !exists(json, 'product_review_email') ? undefined : json['product_review_email'],
    };
}

export function EnabledTransactionalEmailsToJSON(value?: EnabledTransactionalEmails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'abandoned_cart_email': value.abandonedCartEmail,
        'account_details_changed_email': value.accountDetailsChangedEmail,
        'combined_order_status_email': value.combinedOrderStatusEmail,
        'createaccount_email': value.createaccountEmail,
        'createguestaccount_email': value.createguestaccountEmail,
        'giftcertificate_email': value.giftcertificateEmail,
        'invoice_email': value.invoiceEmail,
        'ordermessage_notification': value.ordermessageNotification,
        'return_confirmation_email': value.returnConfirmationEmail,
        'return_statuschange_email': value.returnStatuschangeEmail,
        'product_review_email': value.productReviewEmail,
    };
}


