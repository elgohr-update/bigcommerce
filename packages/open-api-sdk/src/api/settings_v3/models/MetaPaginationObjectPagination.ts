/* tslint:disable */
/* eslint-disable */
/**
 * Settings V3
 * Manage settings and configuration for BigCommerce hosted stores and headless storefronts.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/settings/storefront/status host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | |-|-|-| |  Information & Settings | modify | `store_v2_information` | |  Information & Settings | read-only | `store_v2_information_read_only` |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@bigcommerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MetaPaginationObjectPaginationLinks,
    MetaPaginationObjectPaginationLinksFromJSON,
    MetaPaginationObjectPaginationLinksFromJSONTyped,
    MetaPaginationObjectPaginationLinksToJSON,
} from './';

/**
 * 
 * @export
 * @interface MetaPaginationObjectPagination
 */
export interface MetaPaginationObjectPagination {
    /**
     * 
     * @type {number}
     * @memberof MetaPaginationObjectPagination
     */
    total?: number;
    /**
     * 
     * @type {number}
     * @memberof MetaPaginationObjectPagination
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof MetaPaginationObjectPagination
     */
    perPage?: number;
    /**
     * 
     * @type {number}
     * @memberof MetaPaginationObjectPagination
     */
    currentPage?: number;
    /**
     * 
     * @type {number}
     * @memberof MetaPaginationObjectPagination
     */
    totalPages?: number;
    /**
     * 
     * @type {MetaPaginationObjectPaginationLinks}
     * @memberof MetaPaginationObjectPagination
     */
    links?: MetaPaginationObjectPaginationLinks;
}

export function MetaPaginationObjectPaginationFromJSON(json: any): MetaPaginationObjectPagination {
    return MetaPaginationObjectPaginationFromJSONTyped(json, false);
}

export function MetaPaginationObjectPaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetaPaginationObjectPagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': !exists(json, 'total') ? undefined : json['total'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'perPage': !exists(json, 'per_page') ? undefined : json['per_page'],
        'currentPage': !exists(json, 'current_page') ? undefined : json['current_page'],
        'totalPages': !exists(json, 'total_pages') ? undefined : json['total_pages'],
        'links': !exists(json, 'links') ? undefined : MetaPaginationObjectPaginationLinksFromJSON(json['links']),
    };
}

export function MetaPaginationObjectPaginationToJSON(value?: MetaPaginationObjectPagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'count': value.count,
        'per_page': value.perPage,
        'current_page': value.currentPage,
        'total_pages': value.totalPages,
        'links': MetaPaginationObjectPaginationLinksToJSON(value.links),
    };
}


