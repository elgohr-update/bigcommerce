/* tslint:disable */
/* eslint-disable */
/**
 * Settings V3
 * Manage settings and configuration for BigCommerce hosted stores and headless storefronts.  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET /stores/{{STORE_HASH}}/v3/settings/storefront/status host: api.bigcommerce.com Accept: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | |-|-|-| |  Information & Settings | modify | `store_v2_information` | |  Information & Settings | read-only | `store_v2_information_read_only` |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@bigcommerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EnabledBrandFilter,
    EnabledCategoryFilter,
    EnabledMiscFilter,
    EnabledPriceFilter,
    EnabledProductFilter,
    EnabledRatingFilter,
    EnabledBrandFilterFromJSONTyped,
    EnabledBrandFilterToJSON,
    EnabledCategoryFilterFromJSONTyped,
    EnabledCategoryFilterToJSON,
    EnabledMiscFilterFromJSONTyped,
    EnabledMiscFilterToJSON,
    EnabledPriceFilterFromJSONTyped,
    EnabledPriceFilterToJSON,
    EnabledProductFilterFromJSONTyped,
    EnabledProductFilterToJSON,
    EnabledRatingFilterFromJSONTyped,
    EnabledRatingFilterToJSON,
} from './';

/**
 * @type EnabledFilter
 * 
 * @export
 */
export type EnabledFilter = EnabledBrandFilter | EnabledCategoryFilter | EnabledMiscFilter | EnabledPriceFilter | EnabledProductFilter | EnabledRatingFilter;

export function EnabledFilterFromJSON(json: any): EnabledFilter {
    return EnabledFilterFromJSONTyped(json, false);
}

export function EnabledFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnabledFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...EnabledBrandFilterFromJSONTyped(json, true), ...EnabledCategoryFilterFromJSONTyped(json, true), ...EnabledMiscFilterFromJSONTyped(json, true), ...EnabledPriceFilterFromJSONTyped(json, true), ...EnabledProductFilterFromJSONTyped(json, true), ...EnabledRatingFilterFromJSONTyped(json, true) };
}

export function EnabledFilterToJSON(value?: EnabledFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return { ...EnabledBrandFilterToJSON(value), ...EnabledCategoryFilterToJSON(value), ...EnabledMiscFilterToJSON(value), ...EnabledPriceFilterToJSON(value), ...EnabledProductFilterToJSON(value), ...EnabledRatingFilterToJSON(value) };
}

