/* tslint:disable */
/* eslint-disable */
/**
 * Pages V3
 * Manage content pages across multiple sites.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PaginationLinks,
    PaginationLinksFromJSON,
    PaginationLinksFromJSONTyped,
    PaginationLinksToJSON,
} from './';

/**
 * Data about the response, including pagination and collection totals.
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * Total number of items in the result set.
     * @type {number}
     * @memberof Pagination
     */
    total?: number;
    /**
     * Total number of items in the collection response.
     * @type {number}
     * @memberof Pagination
     */
    count?: number;
    /**
     * The amount of items returned in the collection per page, controlled by the limit parameter.
     * @type {number}
     * @memberof Pagination
     */
    perPage?: number;
    /**
     * The page you are currently on within the collection.
     * @type {number}
     * @memberof Pagination
     */
    currentPage?: number;
    /**
     * The total number of pages in the collection.
     * @type {number}
     * @memberof Pagination
     */
    totalPages?: number;
    /**
     * 
     * @type {PaginationLinks}
     * @memberof Pagination
     */
    links?: PaginationLinks;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': !exists(json, 'total') ? undefined : json['total'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'perPage': !exists(json, 'per_page') ? undefined : json['per_page'],
        'currentPage': !exists(json, 'current_page') ? undefined : json['current_page'],
        'totalPages': !exists(json, 'total_pages') ? undefined : json['total_pages'],
        'links': !exists(json, 'links') ? undefined : PaginationLinksFromJSON(json['links']),
    };
}

export function PaginationToJSON(value?: Pagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'count': value.count,
        'per_page': value.perPage,
        'current_page': value.currentPage,
        'total_pages': value.totalPages,
        'links': PaginationLinksToJSON(value.links),
    };
}


