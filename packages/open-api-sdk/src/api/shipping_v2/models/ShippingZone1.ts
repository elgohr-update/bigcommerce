/* tslint:disable */
/* eslint-disable */
/**
 * Shipping V2
 * Manage shipping zones, shipping methods, and shipping carrier connections.  ### Shipping Zones The Shipping Zone object and endpoints manage shipping zones within countries.  ### Shipping Methods The Shipping Methods object and endpoints manage shipping rules within Shipping Zones. These rules determine the shipping rates displayed at checkout, and related parts of the control panel, such as the shipping of manual orders.  ### Shipping Carrier Connections Carrier connections refer to specific settings required to connect to a specific shipping carrier. Each carrier requires your app to supply a unique set of properties/fields to establish a connection with that carrier.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ShippingZoneHandlingFees,
    ShippingZoneHandlingFeesFromJSON,
    ShippingZoneHandlingFeesFromJSONTyped,
    ShippingZoneHandlingFeesToJSON,
    ShippingZoneLocations,
    ShippingZoneLocationsFromJSON,
    ShippingZoneLocationsFromJSONTyped,
    ShippingZoneLocationsToJSON,
    ShippingZonesFreeShipping,
    ShippingZonesFreeShippingFromJSON,
    ShippingZonesFreeShippingFromJSONTyped,
    ShippingZonesFreeShippingToJSON,
} from './';

/**
 * 
 * @export
 * @interface ShippingZone1
 */
export interface ShippingZone1 {
    /**
     * Zone Id. READ-ONLY
     * @type {number}
     * @memberof ShippingZone1
     */
    id?: number;
    /**
     * Zone name. Required for /PUT
     * @type {string}
     * @memberof ShippingZone1
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ShippingZone1
     */
    type?: ShippingZone1TypeEnum;
    /**
     * Array of zone locations.
     * @type {Array<ShippingZoneLocations>}
     * @memberof ShippingZone1
     */
    locations?: Array<ShippingZoneLocations>;
    /**
     * 
     * @type {ShippingZonesFreeShipping}
     * @memberof ShippingZone1
     */
    freeShipping?: ShippingZonesFreeShipping;
    /**
     * 
     * @type {ShippingZoneHandlingFees}
     * @memberof ShippingZone1
     */
    handlingFees?: ShippingZoneHandlingFees;
    /**
     * Whether this shipping zone is enabled.
     * @type {boolean}
     * @memberof ShippingZone1
     */
    enabled?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum ShippingZone1TypeEnum {
    Zip = 'zip',
    Country = 'country',
    State = 'state',
    Global = 'global'
}

export function ShippingZone1FromJSON(json: any): ShippingZone1 {
    return ShippingZone1FromJSONTyped(json, false);
}

export function ShippingZone1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ShippingZone1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'locations': !exists(json, 'locations') ? undefined : ((json['locations'] as Array<any>).map(ShippingZoneLocationsFromJSON)),
        'freeShipping': !exists(json, 'free_shipping') ? undefined : ShippingZonesFreeShippingFromJSON(json['free_shipping']),
        'handlingFees': !exists(json, 'handling_fees') ? undefined : ShippingZoneHandlingFeesFromJSON(json['handling_fees']),
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
    };
}

export function ShippingZone1ToJSON(value?: ShippingZone1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'type': value.type,
        'locations': value.locations === undefined ? undefined : ((value.locations as Array<any>).map(ShippingZoneLocationsToJSON)),
        'free_shipping': ShippingZonesFreeShippingToJSON(value.freeShipping),
        'handling_fees': ShippingZoneHandlingFeesToJSON(value.handlingFees),
        'enabled': value.enabled,
    };
}


