/* tslint:disable */
/* eslint-disable */
/**
 * Customers V2
 * Create and Manage Customers, Customer Addresses, and Customer Groups. Additionally, validate customer passwords. To learn more about Customers see [here](/api-docs/customers/customers-subscribers-overview).  - [Authentication](#authentication) - [Available Endpoints](#available-endpoints) - [Usage Notes](#usage-notes) - [Resources](#resources)  ## Authentication  Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:  ```http GET /stores/{$$.env.store_hash}/v3/catalog/summary host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  ### OAuth Scopes | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Customers                                    | modify     | `store_v2_customers`                          | | Customers                                    | read-only  | `store_v2_customers_read_only`                |  For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Available Endpoints | Resource / Endpoint                     | Description | |-----------------------------------------|-------------------------------------------------------------------------------| | Customers                               | Identity and account details for customers shopping on BigCommerce stores     | | Customers Addresses                     | Postal address belonging to a customer.                                       | | Customers Groups                        | Groupings of customers who share the same level of access and discounts       | | Customers Validate Password             | Validate customer passwords                                                   |  ## Usage Notes  **Customer Groups** * Customer Groups are only available on specific plans.  **Customers vs. Subscribers** * A subscriber is not always a customer. Someone can sign up for the newsletter only and not create an account. * A customer is not always a subscriber. Signing up for the newsletter is a separate action from creating an account and purchasing an item. * A customer and a subscriber can be the same. If a shopper checks out on the storefront, creates an account and opts into the newsletter, they are a customer and a subscriber.  ## Resources  ### Related APIs / Endpoints   [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api) - [Current Customer API](https://developer.bigcommerce.com/api-docs/customers/current-customer-api) - [Customers API (v3)](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api) - [Subscribers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/subscribers-api)  ### Webhooks - [Customers](https://developer.bigcommerce.com/api-docs/getting-started/webhooks/webhook-events#webhook-events_customer)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CategoryAccessLevelFull,
    CategoryAccessLevelFullFromJSON,
    CategoryAccessLevelFullFromJSONTyped,
    CategoryAccessLevelFullToJSON,
    CustomerGroupPostDiscountRules,
    CustomerGroupPostDiscountRulesFromJSON,
    CustomerGroupPostDiscountRulesFromJSONTyped,
    CustomerGroupPostDiscountRulesToJSON,
} from './';

/**
 * When creating a customer group category discount using the API it defaults to "products in this category and its subcategories". In the [Control Panel](https://support.bigcommerce.com/s/article/Customer-Groups#pricing) this can be changed to either "products in this category only" or "products in this category and its subcategories". There are currently no settings to change this behavior via API.
 * @export
 * @interface CustomerGroupPost
 */
export interface CustomerGroupPost {
    /**
     * Name of the group
     * @type {string}
     * @memberof CustomerGroupPost
     */
    name?: string;
    /**
     * Determines whether new customers are assigned to this group by default.
     * @type {boolean}
     * @memberof CustomerGroupPost
     */
    isDefault?: boolean;
    /**
     * 
     * @type {CategoryAccessLevelFull}
     * @memberof CustomerGroupPost
     */
    categoryAccess?: CategoryAccessLevelFull;
    /**
     * A collection of discount rules that are automatically applied to customers who are members of the group
     * @type {Array<CustomerGroupPostDiscountRules>}
     * @memberof CustomerGroupPost
     */
    discountRules?: Array<CustomerGroupPostDiscountRules>;
    /**
     * If the groups is for guests. There can only be one customer group for guests at a time.
     * @type {boolean}
     * @memberof CustomerGroupPost
     */
    isGroupForGuests?: boolean;
}

export function CustomerGroupPostFromJSON(json: any): CustomerGroupPost {
    return CustomerGroupPostFromJSONTyped(json, false);
}

export function CustomerGroupPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerGroupPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isDefault': !exists(json, 'is_default') ? undefined : json['is_default'],
        'categoryAccess': !exists(json, 'category_access') ? undefined : CategoryAccessLevelFullFromJSON(json['category_access']),
        'discountRules': !exists(json, 'discount_rules') ? undefined : ((json['discount_rules'] as Array<any>).map(CustomerGroupPostDiscountRulesFromJSON)),
        'isGroupForGuests': !exists(json, 'is_group_for_guests') ? undefined : json['is_group_for_guests'],
    };
}

export function CustomerGroupPostToJSON(value?: CustomerGroupPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'is_default': value.isDefault,
        'category_access': CategoryAccessLevelFullToJSON(value.categoryAccess),
        'discount_rules': value.discountRules === undefined ? undefined : ((value.discountRules as Array<any>).map(CustomerGroupPostDiscountRulesToJSON)),
        'is_group_for_guests': value.isGroupForGuests,
    };
}


