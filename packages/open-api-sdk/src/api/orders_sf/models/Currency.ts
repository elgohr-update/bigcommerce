/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Orders
 * Get order data immediately after an order is placed on the storefront.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This will always be the same between cart and checkout.
 * @export
 * @interface Currency
 */
export interface Currency {
    /**
     * The currency name.
     * @type {string}
     * @memberof Currency
     */
    name?: string;
    /**
     * ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)
     * @type {string}
     * @memberof Currency
     */
    code?: string;
    /**
     * The currency symbol.
     * @type {string}
     * @memberof Currency
     */
    symbol?: string;
    /**
     * Number of decimal places for the currency. For example, USD currency has two decimal places.
     * @type {number}
     * @memberof Currency
     */
    decimalPlaces?: number;
}

export function CurrencyFromJSON(json: any): Currency {
    return CurrencyFromJSONTyped(json, false);
}

export function CurrencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Currency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'decimalPlaces': !exists(json, 'decimalPlaces') ? undefined : json['decimalPlaces'],
    };
}

export function CurrencyToJSON(value?: Currency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'code': value.code,
        'symbol': value.symbol,
        'decimalPlaces': value.decimalPlaces,
    };
}


