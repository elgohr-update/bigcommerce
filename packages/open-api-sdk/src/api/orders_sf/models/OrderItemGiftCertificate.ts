/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Orders
 * Get order data immediately after an order is placed on the storefront.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderItemGiftCertificate
 */
export interface OrderItemGiftCertificate {
    /**
     * The item's product name.
     * @type {string}
     * @memberof OrderItemGiftCertificate
     */
    name?: string;
    /**
     * Quantity of this item.
     * @type {number}
     * @memberof OrderItemGiftCertificate
     */
    quantity?: number;
    /**
     * Whether the item is taxable.
     * @type {boolean}
     * @memberof OrderItemGiftCertificate
     */
    isTaxable?: boolean;
    /**
     * Price of the item
     * @type {number}
     * @memberof OrderItemGiftCertificate
     */
    amount?: number;
    /**
     * Explicitly specifying the gift certificate type
     * @type {string}
     * @memberof OrderItemGiftCertificate
     */
    type?: string;
}

export function OrderItemGiftCertificateFromJSON(json: any): OrderItemGiftCertificate {
    return OrderItemGiftCertificateFromJSONTyped(json, false);
}

export function OrderItemGiftCertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItemGiftCertificate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function OrderItemGiftCertificateToJSON(value?: OrderItemGiftCertificate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'quantity': value.quantity,
        'isTaxable': value.isTaxable,
        'amount': value.amount,
        'type': value.type,
    };
}


