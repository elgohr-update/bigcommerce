/* tslint:disable */
/* eslint-disable */
/**
 * Webhooks v3
 * Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](https://developer.bigcommerce.com/api-docs/store-management/webhooks/overview).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StoreCartConvertedAllOf,
    StoreCartConvertedAllOfFromJSON,
    StoreCartConvertedAllOfFromJSONTyped,
    StoreCartConvertedAllOfToJSON,
    StoreCartConvertedAllOfData,
    StoreCartConvertedAllOfDataFromJSON,
    StoreCartConvertedAllOfDataFromJSONTyped,
    StoreCartConvertedAllOfDataToJSON,
    WebhookCallbackBase,
    WebhookCallbackBaseFromJSON,
    WebhookCallbackBaseFromJSONTyped,
    WebhookCallbackBaseToJSON,
} from './';

/**
 * This hook fires when a cart is converted into an order, which is typically after the payment step of checkout on the storefront. At this point, the cart is no longer accessible and has been deleted. This hook returns both the cart ID and order ID for correlation purposes.
 * 
 * ### Example callback:
 * 
 * ```json
 * {
 *   "created_at": 1561482670,
 *   "store_id": "1025646",
 *   "producer": "stores/{store_hash}",
 *   "scope": "store/cart/converted",
 *   "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
 *   "data": {
 *     "type": "cart",
 *     "id": "09346904-4175-44fd-be53-f7e598531b6c",
 *     "orderId": 252
 *   }
 * }
 * ```
 * 
 * ### Callback schema:
 * @export
 * @interface StoreCartConverted
 */
export interface StoreCartConverted {
    /**
     * Hook creation date as a Unix timestamp.
     * @type {number}
     * @memberof StoreCartConverted
     */
    readonly createdAt?: number;
    /**
     * A numerical identifier that is unique to each store.
     * @type {string}
     * @memberof StoreCartConverted
     */
    storeId?: string;
    /**
     * Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.
     * @type {string}
     * @memberof StoreCartConverted
     */
    producer?: string;
    /**
     * The event registered when the webhook was created.
     * @type {string}
     * @memberof StoreCartConverted
     */
    scope?: string;
    /**
     * The payload data JSON encoded then passed through SH1 encryption.
     * @type {string}
     * @memberof StoreCartConverted
     */
    hash?: string;
    /**
     * 
     * @type {StoreCartConvertedAllOfData}
     * @memberof StoreCartConverted
     */
    data?: StoreCartConvertedAllOfData;
}

export function StoreCartConvertedFromJSON(json: any): StoreCartConverted {
    return StoreCartConvertedFromJSONTyped(json, false);
}

export function StoreCartConvertedFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreCartConverted {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'storeId': !exists(json, 'store_id') ? undefined : json['store_id'],
        'producer': !exists(json, 'producer') ? undefined : json['producer'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'data': !exists(json, 'data') ? undefined : StoreCartConvertedAllOfDataFromJSON(json['data']),
    };
}

export function StoreCartConvertedToJSON(value?: StoreCartConverted | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'store_id': value.storeId,
        'producer': value.producer,
        'scope': value.scope,
        'hash': value.hash,
        'data': StoreCartConvertedAllOfDataToJSON(value.data),
    };
}


