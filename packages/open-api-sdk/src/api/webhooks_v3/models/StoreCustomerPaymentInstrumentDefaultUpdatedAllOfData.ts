/* tslint:disable */
/* eslint-disable */
/**
 * Webhooks v3
 * Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](https://developer.bigcommerce.com/api-docs/store-management/webhooks/overview).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
 * @export
 * @interface StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData
 */
export interface StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData {
    /**
     * can be `cart` or `cart_line_item`
     * @type {string}
     * @memberof StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData
     */
    readonly type?: string;
    /**
     * ID of the customer
     * @type {number}
     * @memberof StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData
     */
    id?: number;
}

export function StoreCustomerPaymentInstrumentDefaultUpdatedAllOfDataFromJSON(json: any): StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData {
    return StoreCustomerPaymentInstrumentDefaultUpdatedAllOfDataFromJSONTyped(json, false);
}

export function StoreCustomerPaymentInstrumentDefaultUpdatedAllOfDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function StoreCustomerPaymentInstrumentDefaultUpdatedAllOfDataToJSON(value?: StoreCustomerPaymentInstrumentDefaultUpdatedAllOfData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
    };
}


