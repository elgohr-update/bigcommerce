/* tslint:disable */
/* eslint-disable */
/**
 * Tax Provider Connection
 * Manage the connection between a merchant\'s BigCommerce store and a third party tax provider. For more information, see [Tax Provider API Overview](https://developer.bigcommerce.com/api-docs/providers/tax).
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseConnectionData
 */
export interface ResponseConnectionData {
    /**
     * Identifies a unique account on the external tax provider infrastructure. May be used to reconcile the two platforms.
     * @type {string}
     * @memberof ResponseConnectionData
     */
    username?: string;
    /**
     * Describes whether the stored credentials are considered complete and configured, ready to be used for Tax Provider API requests.
     * 
     * Merchants may enable any **configured** tax provider for storefront tax quotation.
     * @type {boolean}
     * @memberof ResponseConnectionData
     */
    configured?: boolean;
}

export function ResponseConnectionDataFromJSON(json: any): ResponseConnectionData {
    return ResponseConnectionDataFromJSONTyped(json, false);
}

export function ResponseConnectionDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseConnectionData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'configured': !exists(json, 'configured') ? undefined : json['configured'],
    };
}

export function ResponseConnectionDataToJSON(value?: ResponseConnectionData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'configured': value.configured,
    };
}


