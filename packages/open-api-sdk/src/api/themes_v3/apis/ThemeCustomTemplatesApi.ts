/* tslint:disable */
/* eslint-disable */
/**
 * Themes
 * Backup, restore, download, and activate themes; and, get the status of theme jobs and read theme configurations.  - [OAuth Scopes](#oauth-scopes) - [Authentication](#authentication)  ## Authentication  Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header.  ```http GET /stores/{$$.env.store_hash}/v3/themes host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  ### OAuth Scopes | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Themes                                       | modify     | `store_themes_manage`                         | For more information on OAuth Scopes, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse2001,
    InlineResponse2001FromJSON,
    InlineResponse2001ToJSON,
} from '../models';

export interface GetThemesThemeUuidCustomTemplatesRequest {
    versionUuid: string;
}

/**
 * 
 */
export class ThemeCustomTemplatesApi extends runtime.BaseAPI {

    /**
     * Enumerate available custom templates for in the theme files in a specific theme version for each supported entity type.
     * Get Custom Templates
     */
    async getThemesThemeUuidCustomTemplatesRaw(requestParameters: GetThemesThemeUuidCustomTemplatesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse2001>> {
        if (requestParameters.versionUuid === null || requestParameters.versionUuid === undefined) {
            throw new runtime.RequiredError('versionUuid','Required parameter requestParameters.versionUuid was null or undefined when calling getThemesThemeUuidCustomTemplates.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/themes/custom-templates/{version_uuid}`.replace(`{${"version_uuid"}}`, encodeURIComponent(String(requestParameters.versionUuid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse2001FromJSON(jsonValue));
    }

    /**
     * Enumerate available custom templates for in the theme files in a specific theme version for each supported entity type.
     * Get Custom Templates
     */
    async getThemesThemeUuidCustomTemplates(requestParameters: GetThemesThemeUuidCustomTemplatesRequest, initOverrides?: RequestInit): Promise<InlineResponse2001> {
        const response = await this.getThemesThemeUuidCustomTemplatesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
