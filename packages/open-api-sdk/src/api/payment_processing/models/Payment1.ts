/* tslint:disable */
/* eslint-disable */
/**
 * Payment Processing
 * Process payments using payment instrument such as credit card. See [Payments Overview](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Card,
    CardFromJSON,
    CardFromJSONTyped,
    CardToJSON,
    StoredCard,
    StoredCardFromJSON,
    StoredCardFromJSONTyped,
    StoredCardToJSON,
    StoredPaypalAccount,
    StoredPaypalAccountFromJSON,
    StoredPaypalAccountFromJSONTyped,
    StoredPaypalAccountToJSON,
} from './';

/**
 * 
 * @export
 * @interface Payment1
 */
export interface Payment1 {
    /**
     * 
     * @type {Card | StoredCard | StoredPaypalAccount}
     * @memberof Payment1
     */
    instrument: Card | StoredCard | StoredPaypalAccount;
    /**
     * Identifier for payment method that will be used for this payment and `id` from the Get Accepted Payment Methods API
     * @type {string}
     * @memberof Payment1
     */
    paymentMethodId: string;
    /**
     * To use `save_instrument`, configure the payment gateway to accept stored cards.
     * @type {boolean}
     * @memberof Payment1
     */
    saveInstrument?: boolean;
}

export function Payment1FromJSON(json: any): Payment1 {
    return Payment1FromJSONTyped(json, false);
}

export function Payment1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'instrument': Card | StoredCard | StoredPaypalAccountFromJSON(json['instrument']),
        'paymentMethodId': json['payment_method_id'],
        'saveInstrument': !exists(json, 'save_instrument') ? undefined : json['save_instrument'],
    };
}

export function Payment1ToJSON(value?: Payment1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'instrument': Card | StoredCard | StoredPaypalAccountToJSON(value.instrument),
        'payment_method_id': value.paymentMethodId,
        'save_instrument': value.saveInstrument,
    };
}


