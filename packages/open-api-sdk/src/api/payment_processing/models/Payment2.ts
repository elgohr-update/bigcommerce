/* tslint:disable */
/* eslint-disable */
/**
 * Payment Processing
 * Process payments using payment instrument such as credit card. See [Payments Overview](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Payment2
 */
export interface Payment2 {
    /**
     * Amount in smallest currency unit
     * @type {number}
     * @memberof Payment2
     */
    amount?: number;
    /**
     * Currency code
     * @type {string}
     * @memberof Payment2
     */
    currencyCode?: string;
    /**
     * 
     * @type {object}
     * @memberof Payment2
     */
    instrument: object;
    /**
     * Identifier for payment method that will be used for this payment
     * @type {string}
     * @memberof Payment2
     */
    paymentMethodId: string;
}

export function Payment2FromJSON(json: any): Payment2 {
    return Payment2FromJSONTyped(json, false);
}

export function Payment2FromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currencyCode': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'instrument': json['instrument'],
        'paymentMethodId': json['payment_method_id'],
    };
}

export function Payment2ToJSON(value?: Payment2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'currency_code': value.currencyCode,
        'instrument': value.instrument,
        'payment_method_id': value.paymentMethodId,
    };
}


