/* tslint:disable */
/* eslint-disable */
/**
 * Payment Processing
 * Process payments using payment instrument such as credit card. See [Payments Overview](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaymentMethodStoredInstrument
 */
export interface PaymentMethodStoredInstrument {
    /**
     * Brand of this card such as VISA or Mastercard
     * @type {string}
     * @memberof PaymentMethodStoredInstrument
     */
    brand: string;
    /**
     * Expiry month of this card
     * @type {number}
     * @memberof PaymentMethodStoredInstrument
     */
    expiryMonth: number;
    /**
     * Expiry year of this card
     * @type {number}
     * @memberof PaymentMethodStoredInstrument
     */
    expiryYear: number;
    /**
     * Issuer identification number of this card. This is extracted from the card when the order is payed for.
     * @type {string}
     * @memberof PaymentMethodStoredInstrument
     */
    issuerIdentificationNumber: string;
    /**
     * Last four numbers of this card
     * @type {string}
     * @memberof PaymentMethodStoredInstrument
     */
    last4: string;
    /**
     * Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).
     * @type {string}
     * @memberof PaymentMethodStoredInstrument
     */
    token: string;
    /**
     * Whether this instrument is a default instrument
     * @type {boolean}
     * @memberof PaymentMethodStoredInstrument
     */
    isDefault: boolean;
    /**
     * Type to classify this stored card
     * @type {string}
     * @memberof PaymentMethodStoredInstrument
     */
    type: string;
}

export function PaymentMethodStoredInstrumentFromJSON(json: any): PaymentMethodStoredInstrument {
    return PaymentMethodStoredInstrumentFromJSONTyped(json, false);
}

export function PaymentMethodStoredInstrumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentMethodStoredInstrument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'brand': json['brand'],
        'expiryMonth': json['expiry_month'],
        'expiryYear': json['expiry_year'],
        'issuerIdentificationNumber': json['issuer_identification_number'],
        'last4': json['last_4'],
        'token': json['token'],
        'isDefault': json['is_default'],
        'type': json['type'],
    };
}

export function PaymentMethodStoredInstrumentToJSON(value?: PaymentMethodStoredInstrument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'brand': value.brand,
        'expiry_month': value.expiryMonth,
        'expiry_year': value.expiryYear,
        'issuer_identification_number': value.issuerIdentificationNumber,
        'last_4': value.last4,
        'token': value.token,
        'is_default': value.isDefault,
        'type': value.type,
    };
}


