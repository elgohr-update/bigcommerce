/* tslint:disable */
/* eslint-disable */
/**
 * Payment Processing
 * Process payments using payment instrument such as credit card. See [Payments Overview](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse1,
    ErrorResponse1FromJSON,
    ErrorResponse1ToJSON,
    PaymentAccessTokenRequest,
    PaymentAccessTokenRequestFromJSON,
    PaymentAccessTokenRequestToJSON,
    PaymentsAccessTokensResponse,
    PaymentsAccessTokensResponseFromJSON,
    PaymentsAccessTokensResponseToJSON,
} from '../models';

export interface PaymentsAccessTokensPostRequest {
    paymentAccessTokenRequest: PaymentAccessTokenRequest;
    accept?: string;
    contentType?: string;
}

/**
 * 
 */
export class AccessTokensApi extends runtime.BaseAPI {

    /**
     * This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.  After the token is created then use the token to [Process Payments](/api-reference/payments/payments-process-payments/payment/paymentspost).  **Required Fields** * order_id
     * Create Payment Access Token
     */
    async paymentsAccessTokensPostRaw(requestParameters: PaymentsAccessTokensPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PaymentsAccessTokensResponse>> {
        if (requestParameters.paymentAccessTokenRequest === null || requestParameters.paymentAccessTokenRequest === undefined) {
            throw new runtime.RequiredError('paymentAccessTokenRequest','Required parameter requestParameters.paymentAccessTokenRequest was null or undefined when calling paymentsAccessTokensPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/payments/access_tokens`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PaymentAccessTokenRequestToJSON(requestParameters.paymentAccessTokenRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentsAccessTokensResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.  After the token is created then use the token to [Process Payments](/api-reference/payments/payments-process-payments/payment/paymentspost).  **Required Fields** * order_id
     * Create Payment Access Token
     */
    async paymentsAccessTokensPost(requestParameters: PaymentsAccessTokensPostRequest, initOverrides?: RequestInit): Promise<PaymentsAccessTokensResponse> {
        const response = await this.paymentsAccessTokensPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
