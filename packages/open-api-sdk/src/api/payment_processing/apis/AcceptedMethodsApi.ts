/* tslint:disable */
/* eslint-disable */
/**
 * Payment Processing
 * Process payments using payment instrument such as credit card. See [Payments Overview](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse1,
    ErrorResponse1FromJSON,
    ErrorResponse1ToJSON,
    InlineObject,
    InlineObjectFromJSON,
    InlineObjectToJSON,
    PaymentsMethodsResponse,
    PaymentsMethodsResponseFromJSON,
    PaymentsMethodsResponseToJSON,
} from '../models';

export interface PaymentsMethodsGetRequest {
    orderId?: number;
    accept?: string;
    contentType?: string;
    inlineObject?: InlineObject;
}

/**
 * 
 */
export class AcceptedMethodsApi extends runtime.BaseAPI {

    /**
     * Returns a list of accepted payment methods based on the `order_id`.  **Notes** * Use the [Create an Order](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-orders/createanorder) endpoint, to generate the `order_id`. * Orders created will be set to incomplete order status.  **Required Fields** * order_id
     * Get Accepted Payment Methods
     */
    async paymentsMethodsGetRaw(requestParameters: PaymentsMethodsGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PaymentsMethodsResponse>> {
        const queryParameters: any = {};

        if (requestParameters.orderId !== undefined) {
            queryParameters['order_id'] = requestParameters.orderId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/payments/methods`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: InlineObjectToJSON(requestParameters.inlineObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentsMethodsResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of accepted payment methods based on the `order_id`.  **Notes** * Use the [Create an Order](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-orders/createanorder) endpoint, to generate the `order_id`. * Orders created will be set to incomplete order status.  **Required Fields** * order_id
     * Get Accepted Payment Methods
     */
    async paymentsMethodsGet(requestParameters: PaymentsMethodsGetRequest, initOverrides?: RequestInit): Promise<PaymentsMethodsResponse> {
        const response = await this.paymentsMethodsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
