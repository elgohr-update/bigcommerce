/* tslint:disable */
/* eslint-disable */
/**
 * Marketing
 * Manage coupons, banners, and gift certificates.  - [Authentication](#authentication) - [Subresources](#subresources)  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.  ```http GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}} Content-Type: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes |  **UI Name** | **Permission** | **Parameter** | | --- | --- | --- | |  Marketing | modify | `store_v2_marketing` | |  Marketing | read-only | `store_v2_marketing_read_only` |  ## Subresources  ### Coupons Category or product discounts that can be applied to orders for customers who enter a given code.  ### Banners Banners available to display on a store.  ### Gift Certificates Gift certificates available to offer to a storeâ€™s customers.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponsResource
 */
export interface CouponsResource {
    /**
     * URL of the coupons for api requests
     * @type {string}
     * @memberof CouponsResource
     */
    url?: string;
    /**
     * resource of the coupons
     * @type {string}
     * @memberof CouponsResource
     */
    resource?: string;
}

export function CouponsResourceFromJSON(json: any): CouponsResource {
    return CouponsResourceFromJSONTyped(json, false);
}

export function CouponsResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponsResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'resource': !exists(json, 'resource') ? undefined : json['resource'],
    };
}

export function CouponsResourceToJSON(value?: CouponsResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'resource': value.resource,
    };
}


