/* tslint:disable */
/* eslint-disable */
/**
 * Wishlist
 * Create and manage customer [wishlists](https://support.bigcommerce.com/s/article/Wishlists).  - [Authentication](#authentication) - [Additional Information](#additional-information)  ## Authentication  [Authenticate](https://developer.bigcommerce.com/api-docs/getting-started/authentication) requests by including an OAuth `access_token` in the request header.  ```http GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}} Content-Type: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth scopes |  **UI Name** | **Permission** | **Parameter** | | --- | --- | --- | |  Customers | modify | `store_v2_customers` | |  Customers | read-only | `store_v2_customers_read_only` |  For more information on OAuth scopes, see [Authenticating BigCommerce\'s REST APIs](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).  ## Additional Information * [Wishlists](https://support.bigcommerce.com/s/article/Wishlists)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse201,
    InlineResponse201FromJSON,
    InlineResponse201ToJSON,
    WishlistItemPost,
    WishlistItemPostFromJSON,
    WishlistItemPostToJSON,
} from '../models';

export interface WishlistsItemsByIdDeleteRequest {
    wishlistId: number;
    itemId: number;
    accept?: string;
    contentType?: string;
}

export interface WishlistsItemsByIdPostRequest {
    wishlistId: number;
    accept?: string;
    contentType?: string;
    body?: WishlistItemPost;
}

/**
 * 
 */
export class WishlistsItemsApi extends runtime.BaseAPI {

    /**
     * Deletes a wishlist item.
     * Delete Wishlist Item
     */
    async wishlistsItemsByIdDeleteRaw(requestParameters: WishlistsItemsByIdDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse201>> {
        if (requestParameters.wishlistId === null || requestParameters.wishlistId === undefined) {
            throw new runtime.RequiredError('wishlistId','Required parameter requestParameters.wishlistId was null or undefined when calling wishlistsItemsByIdDelete.');
        }

        if (requestParameters.itemId === null || requestParameters.itemId === undefined) {
            throw new runtime.RequiredError('itemId','Required parameter requestParameters.itemId was null or undefined when calling wishlistsItemsByIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/wishlists/{wishlist_id}/items/{item_id}`.replace(`{${"wishlist_id"}}`, encodeURIComponent(String(requestParameters.wishlistId))).replace(`{${"item_id"}}`, encodeURIComponent(String(requestParameters.itemId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse201FromJSON(jsonValue));
    }

    /**
     * Deletes a wishlist item.
     * Delete Wishlist Item
     */
    async wishlistsItemsByIdDelete(requestParameters: WishlistsItemsByIdDeleteRequest, initOverrides?: RequestInit): Promise<InlineResponse201> {
        const response = await this.wishlistsItemsByIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Adds a wishlist item. More than one item can be added at a time.
     * Add Wishlist Item
     */
    async wishlistsItemsByIdPostRaw(requestParameters: WishlistsItemsByIdPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse201>> {
        if (requestParameters.wishlistId === null || requestParameters.wishlistId === undefined) {
            throw new runtime.RequiredError('wishlistId','Required parameter requestParameters.wishlistId was null or undefined when calling wishlistsItemsByIdPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/wishlists/{wishlist_id}/items`.replace(`{${"wishlist_id"}}`, encodeURIComponent(String(requestParameters.wishlistId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WishlistItemPostToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse201FromJSON(jsonValue));
    }

    /**
     * Adds a wishlist item. More than one item can be added at a time.
     * Add Wishlist Item
     */
    async wishlistsItemsByIdPost(requestParameters: WishlistsItemsByIdPostRequest, initOverrides?: RequestInit): Promise<InlineResponse201> {
        const response = await this.wishlistsItemsByIdPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
