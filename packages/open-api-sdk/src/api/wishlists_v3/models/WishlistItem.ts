/* tslint:disable */
/* eslint-disable */
/**
 * Wishlist
 * Create and manage customer [wishlists](https://support.bigcommerce.com/s/article/Wishlists).  - [Authentication](#authentication) - [Additional Information](#additional-information)  ## Authentication  [Authenticate](https://developer.bigcommerce.com/api-docs/getting-started/authentication) requests by including an OAuth `access_token` in the request header.  ```http GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}} Content-Type: application/json X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth scopes |  **UI Name** | **Permission** | **Parameter** | | --- | --- | --- | |  Customers | modify | `store_v2_customers` | |  Customers | read-only | `store_v2_customers_read_only` |  For more information on OAuth scopes, see [Authenticating BigCommerce\'s REST APIs](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).  ## Additional Information * [Wishlists](https://support.bigcommerce.com/s/article/Wishlists)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WishlistItem
 */
export interface WishlistItem {
    /**
     * The ID of the item.
     * @type {number}
     * @memberof WishlistItem
     */
    id?: number;
    /**
     * The ID of the product.
     * @type {number}
     * @memberof WishlistItem
     */
    productId?: number;
    /**
     * The variant ID of the product.
     * @type {number}
     * @memberof WishlistItem
     */
    variantId?: number;
}

export function WishlistItemFromJSON(json: any): WishlistItem {
    return WishlistItemFromJSONTyped(json, false);
}

export function WishlistItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): WishlistItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'productId': !exists(json, 'product_id') ? undefined : json['product_id'],
        'variantId': !exists(json, 'variant_id') ? undefined : json['variant_id'],
    };
}

export function WishlistItemToJSON(value?: WishlistItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'product_id': value.productId,
        'variant_id': value.variantId,
    };
}


