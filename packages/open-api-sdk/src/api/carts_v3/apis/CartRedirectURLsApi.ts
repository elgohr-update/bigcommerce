/* tslint:disable */
/* eslint-disable */
/**
 * Carts
 * Create a cart using BigCommerce cart logic.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse201,
    InlineResponse201FromJSON,
    InlineResponse201ToJSON,
} from '../models';

export interface CreateCartRedirectURLRequest {
    cartId: string;
    accept: string;
    contentType: string;
}

/**
 * 
 */
export class CartRedirectURLsApi extends runtime.BaseAPI {

    /**
     * Creates a **Cart** redirect URL for redirecting a shopper to an already created cart using the `cartId`.  **Usage Notes**  * Redirect URLs can also be created via **Create a Cart** requests by appending `include=redirect_urls`. * A **Carts** redirect URLs may only be used once.  * Once a redirect URL has been visited, it will be invalidated and cannot be used again.  * If your application requires URLs to be visited more than once, consider generating a fresh one each time you need to restore a cart, and redirecting to the URL from your own application. * Redirect URLs can be generated only from carts created using the Server to Server Cart API.  * To restore a cart that was created on the storefront, either by a shopper or the Storefront Cart API, first recreate the cart using the Server to Server Cart API.
     * Create Cart Redirect URL
     */
    async createCartRedirectURLRaw(requestParameters: CreateCartRedirectURLRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse201>> {
        if (requestParameters.cartId === null || requestParameters.cartId === undefined) {
            throw new runtime.RequiredError('cartId','Required parameter requestParameters.cartId was null or undefined when calling createCartRedirectURL.');
        }

        if (requestParameters.accept === null || requestParameters.accept === undefined) {
            throw new runtime.RequiredError('accept','Required parameter requestParameters.accept was null or undefined when calling createCartRedirectURL.');
        }

        if (requestParameters.contentType === null || requestParameters.contentType === undefined) {
            throw new runtime.RequiredError('contentType','Required parameter requestParameters.contentType was null or undefined when calling createCartRedirectURL.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.accept !== undefined && requestParameters.accept !== null) {
            headerParameters['Accept'] = String(requestParameters.accept);
        }

        if (requestParameters.contentType !== undefined && requestParameters.contentType !== null) {
            headerParameters['Content-Type'] = String(requestParameters.contentType);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Auth-Token"] = this.configuration.apiKey("X-Auth-Token"); // X-Auth-Token authentication
        }

        const response = await this.request({
            path: `/carts/{cartId}/redirect_urls`.replace(`{${"cartId"}}`, encodeURIComponent(String(requestParameters.cartId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse201FromJSON(jsonValue));
    }

    /**
     * Creates a **Cart** redirect URL for redirecting a shopper to an already created cart using the `cartId`.  **Usage Notes**  * Redirect URLs can also be created via **Create a Cart** requests by appending `include=redirect_urls`. * A **Carts** redirect URLs may only be used once.  * Once a redirect URL has been visited, it will be invalidated and cannot be used again.  * If your application requires URLs to be visited more than once, consider generating a fresh one each time you need to restore a cart, and redirecting to the URL from your own application. * Redirect URLs can be generated only from carts created using the Server to Server Cart API.  * To restore a cart that was created on the storefront, either by a shopper or the Storefront Cart API, first recreate the cart using the Server to Server Cart API.
     * Create Cart Redirect URL
     */
    async createCartRedirectURL(requestParameters: CreateCartRedirectURLRequest, initOverrides?: RequestInit): Promise<InlineResponse201> {
        const response = await this.createCartRedirectURLRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
