/* tslint:disable */
/* eslint-disable */
/**
 * Carts
 * Create a cart using BigCommerce cart logic.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Add a custom item to the shoppers cart.
 * 
 * * Custom items are not added to the catalog.
 * * The price should be set to match the store settings for taxes.
 * @export
 * @interface ItemCustom
 */
export interface ItemCustom {
    /**
     * Id of the custom item
     * @type {string}
     * @memberof ItemCustom
     */
    id?: string;
    /**
     * Custom item sku
     * @type {string}
     * @memberof ItemCustom
     */
    sku?: string;
    /**
     * Item name
     * @type {string}
     * @memberof ItemCustom
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemCustom
     */
    quantity?: string;
    /**
     * Price of the item. With or without tax, depending on your store's setup. Optional price override.
     * @type {string}
     * @memberof ItemCustom
     */
    listPrice?: string;
}

export function ItemCustomFromJSON(json: any): ItemCustom {
    return ItemCustomFromJSONTyped(json, false);
}

export function ItemCustomFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemCustom {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'listPrice': !exists(json, 'list_price') ? undefined : json['list_price'],
    };
}

export function ItemCustomToJSON(value?: ItemCustom | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'sku': value.sku,
        'name': value.name,
        'quantity': value.quantity,
        'list_price': value.listPrice,
    };
}


