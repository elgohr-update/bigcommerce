/* tslint:disable */
/* eslint-disable */
/**
 * Carts
 * Create a cart using BigCommerce cart logic.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The coupon code
 * @export
 * @interface BaseItemCouponsCouponCode
 */
export interface BaseItemCouponsCouponCode {
    /**
     * Coupon Id
     * @type {number}
     * @memberof BaseItemCouponsCouponCode
     */
    id?: number;
    /**
     * The coupon code. Required in a /POST request.
     * @type {string}
     * @memberof BaseItemCouponsCouponCode
     */
    code?: string;
    /**
     * Name given to the coupon in the Control Panel
     * @type {string}
     * @memberof BaseItemCouponsCouponCode
     */
    name?: string;
    /**
     * The discount type.
     * 
     * - type 0: per_item_discount
     * - type 1: percentage_discount
     * - type 2: per_total_discount
     * - type 3: shipping_discount
     * - type 4: free_shipping
     * @type {number}
     * @memberof BaseItemCouponsCouponCode
     */
    discountType?: number;
    /**
     * The amount of the discount based on the coupon. For example, 3 percent off will show a 3.
     * @type {number}
     * @memberof BaseItemCouponsCouponCode
     */
    discountAmount?: number;
    /**
     * Returns 0 if a expiration date is not set
     * @type {number}
     * @memberof BaseItemCouponsCouponCode
     */
    expiresDate?: number;
    /**
     * Total discount amount off cart
     * @type {number}
     * @memberof BaseItemCouponsCouponCode
     */
    totalDiscount?: number;
}

export function BaseItemCouponsCouponCodeFromJSON(json: any): BaseItemCouponsCouponCode {
    return BaseItemCouponsCouponCodeFromJSONTyped(json, false);
}

export function BaseItemCouponsCouponCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseItemCouponsCouponCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'discountType': !exists(json, 'discountType') ? undefined : json['discountType'],
        'discountAmount': !exists(json, 'discountAmount') ? undefined : json['discountAmount'],
        'expiresDate': !exists(json, 'expiresDate') ? undefined : json['expiresDate'],
        'totalDiscount': !exists(json, 'totalDiscount') ? undefined : json['totalDiscount'],
    };
}

export function BaseItemCouponsCouponCodeToJSON(value?: BaseItemCouponsCouponCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'name': value.name,
        'discountType': value.discountType,
        'discountAmount': value.discountAmount,
        'expiresDate': value.expiresDate,
        'totalDiscount': value.totalDiscount,
    };
}


