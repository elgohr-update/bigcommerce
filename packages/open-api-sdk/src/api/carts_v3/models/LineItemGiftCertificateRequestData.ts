/* tslint:disable */
/* eslint-disable */
/**
 * Carts
 * Create a cart using BigCommerce cart logic.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContactEntity,
    ContactEntityFromJSON,
    ContactEntityFromJSONTyped,
    ContactEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface LineItemGiftCertificateRequestData
 */
export interface LineItemGiftCertificateRequestData {
    /**
     * Given name for gift certificate line item.
     * @type {string}
     * @memberof LineItemGiftCertificateRequestData
     */
    name: string;
    /**
     * Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.
     * @type {string}
     * @memberof LineItemGiftCertificateRequestData
     */
    theme: string;
    /**
     * 
     * @type {number}
     * @memberof LineItemGiftCertificateRequestData
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof LineItemGiftCertificateRequestData
     */
    quantity: number;
    /**
     * 
     * @type {ContactEntity}
     * @memberof LineItemGiftCertificateRequestData
     */
    sender: ContactEntity;
    /**
     * 
     * @type {ContactEntity}
     * @memberof LineItemGiftCertificateRequestData
     */
    recipient: ContactEntity;
    /**
     * Message shown to recipient, as provided by sender.
     * @type {string}
     * @memberof LineItemGiftCertificateRequestData
     */
    message?: string;
}

export function LineItemGiftCertificateRequestDataFromJSON(json: any): LineItemGiftCertificateRequestData {
    return LineItemGiftCertificateRequestDataFromJSONTyped(json, false);
}

export function LineItemGiftCertificateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): LineItemGiftCertificateRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'theme': json['theme'],
        'amount': json['amount'],
        'quantity': json['quantity'],
        'sender': ContactEntityFromJSON(json['sender']),
        'recipient': ContactEntityFromJSON(json['recipient']),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function LineItemGiftCertificateRequestDataToJSON(value?: LineItemGiftCertificateRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'theme': value.theme,
        'amount': value.amount,
        'quantity': value.quantity,
        'sender': ContactEntityToJSON(value.sender),
        'recipient': ContactEntityToJSON(value.recipient),
        'message': value.message,
    };
}


