/* tslint:disable */
/* eslint-disable */
/**
 * Carts
 * Create a cart using BigCommerce cart logic.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemDigitalAllOf
 */
export interface ItemDigitalAllOf {
    /**
     * URLs to download all product files.
     * @type {Array<string>}
     * @memberof ItemDigitalAllOf
     */
    downloadFileUrls?: Array<string>;
    /**
     * The URL for the combined downloads page.
     * @type {string}
     * @memberof ItemDigitalAllOf
     */
    downloadPageUrl?: string;
    /**
     * Combined download size, in human-readable style. E.g.: `30MB`.
     * @type {string}
     * @memberof ItemDigitalAllOf
     */
    downloadSize?: string;
}

export function ItemDigitalAllOfFromJSON(json: any): ItemDigitalAllOf {
    return ItemDigitalAllOfFromJSONTyped(json, false);
}

export function ItemDigitalAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemDigitalAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'downloadFileUrls': !exists(json, 'download_file_urls') ? undefined : json['download_file_urls'],
        'downloadPageUrl': !exists(json, 'download_page_url') ? undefined : json['download_page_url'],
        'downloadSize': !exists(json, 'download_size') ? undefined : json['download_size'],
    };
}

export function ItemDigitalAllOfToJSON(value?: ItemDigitalAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'download_file_urls': value.downloadFileUrls,
        'download_page_url': value.downloadPageUrl,
        'download_size': value.downloadSize,
    };
}


