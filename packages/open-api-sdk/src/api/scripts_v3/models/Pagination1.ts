/* tslint:disable */
/* eslint-disable */
/**
 * Scripts
 * Inject client-side code onto a BigCommere storefront. To learn more about scripts, see [Scripts API](/api-docs/store-management/scripts).   - [OAuth Scopes](#oauth-scopes) - [Authentication](#authentication) - [Available Endpoints](#available-endpoints)  ## OAuth Scopes | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Checkout Content<sup>1</sup>                             | modify     | `store_content_checkout`                      | | Checkout Content<sup>1</sup>                             | read-only  | `store_content_checkout_read_only`            | | Content                                       | modify     | `store_v2_content`                            | | Content                                       | read-only  | `store_v2_content_read_only`                  |  1. `Checkout Content` scopes are required to create or read scripts on the checkout page.  For more information on OAuth Scopes, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Authentication  Requests can be authenticated by sending an`access_token` via `X-Auth-Token` HTTP header:  ```http GET /stores/{$$.env.store_hash}/v3/catalog/summary host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Token`|`access_token`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  For more information on Authenticating BigCommerce APIs, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Available Endpoints | Resource / Endpoint                     | Description                                                             | |-----------------------------------------|-------------------------------------------------------------------------| | Scripts                                 | Add client-side code to a store                                         |
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Pagination1Links,
    Pagination1LinksFromJSON,
    Pagination1LinksFromJSONTyped,
    Pagination1LinksToJSON,
} from './';

/**
 * Data about the response, including pagination and collection totals.
 * @export
 * @interface Pagination1
 */
export interface Pagination1 {
    /**
     * Total number of items in the result set.
     * @type {number}
     * @memberof Pagination1
     */
    total?: number;
    /**
     * Total number of items in the collection response.
     * @type {number}
     * @memberof Pagination1
     */
    count?: number;
    /**
     * The amount of items returned in the collection per page, controlled by the limit parameter.
     * @type {number}
     * @memberof Pagination1
     */
    perPage?: number;
    /**
     * The page you are currently on within the collection.
     * @type {number}
     * @memberof Pagination1
     */
    currentPage?: number;
    /**
     * The total number of pages in the collection.
     * @type {number}
     * @memberof Pagination1
     */
    totalPages?: number;
    /**
     * 
     * @type {Pagination1Links}
     * @memberof Pagination1
     */
    links?: Pagination1Links;
}

export function Pagination1FromJSON(json: any): Pagination1 {
    return Pagination1FromJSONTyped(json, false);
}

export function Pagination1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': !exists(json, 'total') ? undefined : json['total'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'perPage': !exists(json, 'per_page') ? undefined : json['per_page'],
        'currentPage': !exists(json, 'current_page') ? undefined : json['current_page'],
        'totalPages': !exists(json, 'total_pages') ? undefined : json['total_pages'],
        'links': !exists(json, 'links') ? undefined : Pagination1LinksFromJSON(json['links']),
    };
}

export function Pagination1ToJSON(value?: Pagination1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'count': value.count,
        'per_page': value.perPage,
        'current_page': value.currentPage,
        'total_pages': value.totalPages,
        'links': Pagination1LinksToJSON(value.links),
    };
}


