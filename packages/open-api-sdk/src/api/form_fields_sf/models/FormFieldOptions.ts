/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Form Fields (Beta)
 * Read form fields on a BigCommerce hosted storefront.  <div class=\"HubBlock--callout\"> <div class=\"CalloutBlock--warning\"> <div class=\"HubBlock-content\">  > ### Note > * Breaking changes may be introduced to this endpoint while in beta.  </div> </div> </div>
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FormFieldOptionsItems,
    FormFieldOptionsItemsFromJSON,
    FormFieldOptionsItemsFromJSONTyped,
    FormFieldOptionsItemsToJSON,
} from './';

/**
 * Extra data for radio, dropdown and checkbox field types.
 * @export
 * @interface FormFieldOptions
 */
export interface FormFieldOptions {
    /**
     * Placeholder text for dropdown field type.
     * @type {string}
     * @memberof FormFieldOptions
     */
    helperLabel?: string;
    /**
     * List of possible values for this field.
     * @type {Array<FormFieldOptionsItems>}
     * @memberof FormFieldOptions
     */
    items?: Array<FormFieldOptionsItems>;
}

export function FormFieldOptionsFromJSON(json: any): FormFieldOptions {
    return FormFieldOptionsFromJSONTyped(json, false);
}

export function FormFieldOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormFieldOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'helperLabel': !exists(json, 'helperLabel') ? undefined : json['helperLabel'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(FormFieldOptionsItemsFromJSON)),
    };
}

export function FormFieldOptionsToJSON(value?: FormFieldOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'helperLabel': value.helperLabel,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(FormFieldOptionsItemsToJSON)),
    };
}


