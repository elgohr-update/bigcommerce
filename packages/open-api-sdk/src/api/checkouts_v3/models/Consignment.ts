/* tslint:disable */
/* eslint-disable */
/**
 * Checkouts
 * Create checkouts from existing carts using BigCommerce checkout logic.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConsignmentCouponDiscount,
    ConsignmentCouponDiscountFromJSON,
    ConsignmentCouponDiscountFromJSONTyped,
    ConsignmentCouponDiscountToJSON,
    ConsignmentDiscount,
    ConsignmentDiscountFromJSON,
    ConsignmentDiscountFromJSONTyped,
    ConsignmentDiscountToJSON,
    SelectedShippingOption,
    SelectedShippingOptionFromJSON,
    SelectedShippingOptionFromJSONTyped,
    SelectedShippingOptionToJSON,
    SelectedShippingOption1,
    SelectedShippingOption1FromJSON,
    SelectedShippingOption1FromJSONTyped,
    SelectedShippingOption1ToJSON,
} from './';

/**
 * This allows us to have multiple shipping addresses. Where there is only one shipping address, this array will contain only one value, with all the items.
 * @export
 * @interface Consignment
 */
export interface Consignment {
    /**
     * 
     * @type {string}
     * @memberof Consignment
     */
    id?: string;
    /**
     * 
     * @type {object}
     * @memberof Consignment
     */
    shippingAddress?: object;
    /**
     * This is available only when "include=available_shipping_options" is presented in the URL.
     * @type {Array<SelectedShippingOption>}
     * @memberof Consignment
     */
    availableShippingOptions?: Array<SelectedShippingOption>;
    /**
     * 
     * @type {SelectedShippingOption1}
     * @memberof Consignment
     */
    selectedShippingOption?: SelectedShippingOption1;
    /**
     * List of consignment discounts applied through coupons
     * @type {Array<ConsignmentCouponDiscount>}
     * @memberof Consignment
     */
    couponDiscounts?: Array<ConsignmentCouponDiscount>;
    /**
     * List of consignment discounts applied through cart level discounts
     * @type {Array<ConsignmentDiscount>}
     * @memberof Consignment
     */
    discounts?: Array<ConsignmentDiscount>;
    /**
     * The shipping cost for this consignment including tax.
     * @type {number}
     * @memberof Consignment
     */
    shippingCostIncTax?: number;
    /**
     * The shipping cost for this consignment excluding tax.
     * @type {number}
     * @memberof Consignment
     */
    shippingCostExTax?: number;
    /**
     * The handling cost of shipping for this consignment including tax.
     * @type {number}
     * @memberof Consignment
     */
    handlingCostIncTax?: number;
    /**
     * The handling cost of shipping for this consignment excluding tax.
     * @type {number}
     * @memberof Consignment
     */
    handlingCostExTax?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Consignment
     */
    lineItemIds?: Array<string>;
}

export function ConsignmentFromJSON(json: any): Consignment {
    return ConsignmentFromJSONTyped(json, false);
}

export function ConsignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Consignment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'shippingAddress': !exists(json, 'shipping_address') ? undefined : json['shipping_address'],
        'availableShippingOptions': !exists(json, 'available_shipping_options') ? undefined : ((json['available_shipping_options'] as Array<any>).map(SelectedShippingOptionFromJSON)),
        'selectedShippingOption': !exists(json, 'selected_shipping_option') ? undefined : SelectedShippingOption1FromJSON(json['selected_shipping_option']),
        'couponDiscounts': !exists(json, 'coupon_discounts') ? undefined : ((json['coupon_discounts'] as Array<any>).map(ConsignmentCouponDiscountFromJSON)),
        'discounts': !exists(json, 'discounts') ? undefined : ((json['discounts'] as Array<any>).map(ConsignmentDiscountFromJSON)),
        'shippingCostIncTax': !exists(json, 'shipping_cost_inc_tax') ? undefined : json['shipping_cost_inc_tax'],
        'shippingCostExTax': !exists(json, 'shipping_cost_ex_tax') ? undefined : json['shipping_cost_ex_tax'],
        'handlingCostIncTax': !exists(json, 'handling_cost_inc_tax') ? undefined : json['handling_cost_inc_tax'],
        'handlingCostExTax': !exists(json, 'handling_cost_ex_tax') ? undefined : json['handling_cost_ex_tax'],
        'lineItemIds': !exists(json, 'line_item_ids') ? undefined : json['line_item_ids'],
    };
}

export function ConsignmentToJSON(value?: Consignment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'shipping_address': value.shippingAddress,
        'available_shipping_options': value.availableShippingOptions === undefined ? undefined : ((value.availableShippingOptions as Array<any>).map(SelectedShippingOptionToJSON)),
        'selected_shipping_option': SelectedShippingOption1ToJSON(value.selectedShippingOption),
        'coupon_discounts': value.couponDiscounts === undefined ? undefined : ((value.couponDiscounts as Array<any>).map(ConsignmentCouponDiscountToJSON)),
        'discounts': value.discounts === undefined ? undefined : ((value.discounts as Array<any>).map(ConsignmentDiscountToJSON)),
        'shipping_cost_inc_tax': value.shippingCostIncTax,
        'shipping_cost_ex_tax': value.shippingCostExTax,
        'handling_cost_inc_tax': value.handlingCostIncTax,
        'handling_cost_ex_tax': value.handlingCostExTax,
        'line_item_ids': value.lineItemIds,
    };
}


