/* tslint:disable */
/* eslint-disable */
/**
 * Shipping V3
 * V3 REST API shipping endpoints.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Data about the customs information object.
 * @export
 * @interface CustomsInformation
 */
export interface CustomsInformation {
    /**
     * The id of the product which the customs information data will apply to.
     * @type {number}
     * @memberof CustomsInformation
     */
    productId?: number;
    /**
     * The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.
     * @type {string}
     * @memberof CustomsInformation
     */
    countryOfOrigin?: string;
    /**
     * Description that provides information for customs to identify and verify shapes physical characteristics and packaging of each shipment.
     * @type {string}
     * @memberof CustomsInformation
     */
    commodityDescription?: string;
    /**
     * Flag to determine whether this product will be shipped internationally
     * @type {boolean}
     * @memberof CustomsInformation
     */
    internationalShipping?: boolean;
    /**
     * Key value pair commonly used in the form of **countryISO2:'/^[0-9A-Za-z]{6,14}$/'**. This is to represent a country and the associated hs code that applies to that country. Eg {"US":"508313","AU":"850610"}.
     * 
     * There is a special value of **'ALL'** which can be used in place of the countryISO2 to represent that the hs code applies to all countries. Eg {"ALL":"634000"}. This can be combined with other countries in the hs codes object. For Eg {"All":"640000", "US":"641000"}
     * @type {object}
     * @memberof CustomsInformation
     */
    hsCodes?: object;
}

export function CustomsInformationFromJSON(json: any): CustomsInformation {
    return CustomsInformationFromJSONTyped(json, false);
}

export function CustomsInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomsInformation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productId': !exists(json, 'product_id') ? undefined : json['product_id'],
        'countryOfOrigin': !exists(json, 'country_of_origin') ? undefined : json['country_of_origin'],
        'commodityDescription': !exists(json, 'commodity_description') ? undefined : json['commodity_description'],
        'internationalShipping': !exists(json, 'international_shipping') ? undefined : json['international_shipping'],
        'hsCodes': !exists(json, 'hs_codes') ? undefined : json['hs_codes'],
    };
}

export function CustomsInformationToJSON(value?: CustomsInformation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'product_id': value.productId,
        'country_of_origin': value.countryOfOrigin,
        'commodity_description': value.commodityDescription,
        'international_shipping': value.internationalShipping,
        'hs_codes': value.hsCodes,
    };
}


