/* tslint:disable */
/* eslint-disable */
/**
 * Shipping V3
 * V3 REST API shipping endpoints.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MetaCollectionPaginationLinks,
    MetaCollectionPaginationLinksFromJSON,
    MetaCollectionPaginationLinksFromJSONTyped,
    MetaCollectionPaginationLinksToJSON,
} from './';

/**
 * 
 * @export
 * @interface MetaCollectionPagination
 */
export interface MetaCollectionPagination {
    /**
     * Total number of items returned.
     * @type {number}
     * @memberof MetaCollectionPagination
     */
    total?: number;
    /**
     * Number of items returned on per page.
     * @type {number}
     * @memberof MetaCollectionPagination
     */
    count?: number;
    /**
     * Number of items to be displayed per page.
     * @type {number}
     * @memberof MetaCollectionPagination
     */
    perPage?: number;
    /**
     * Current page number.
     * @type {number}
     * @memberof MetaCollectionPagination
     */
    currentPage?: number;
    /**
     * Total number of pages.
     * @type {number}
     * @memberof MetaCollectionPagination
     */
    totalPage?: number;
    /**
     * 
     * @type {MetaCollectionPaginationLinks}
     * @memberof MetaCollectionPagination
     */
    links?: MetaCollectionPaginationLinks;
}

export function MetaCollectionPaginationFromJSON(json: any): MetaCollectionPagination {
    return MetaCollectionPaginationFromJSONTyped(json, false);
}

export function MetaCollectionPaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetaCollectionPagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': !exists(json, 'total') ? undefined : json['total'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'perPage': !exists(json, 'per_page') ? undefined : json['per_page'],
        'currentPage': !exists(json, 'current_page') ? undefined : json['current_page'],
        'totalPage': !exists(json, 'total_page') ? undefined : json['total_page'],
        'links': !exists(json, 'links') ? undefined : MetaCollectionPaginationLinksFromJSON(json['links']),
    };
}

export function MetaCollectionPaginationToJSON(value?: MetaCollectionPagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'count': value.count,
        'per_page': value.perPage,
        'current_page': value.currentPage,
        'total_page': value.totalPage,
        'links': MetaCollectionPaginationLinksToJSON(value.links),
    };
}


