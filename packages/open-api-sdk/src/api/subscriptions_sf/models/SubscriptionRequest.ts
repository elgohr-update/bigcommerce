/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Subscriptions
 * Manage newsletter and marketing email subscriptions on the storefront.  - [Additional Information](#additional-information)  ## Additional Information  * [Collecting Newsletter Subscriptions](https://support.bigcommerce.com/s/article/Collecting-Newsletter-Subscriptions) (support.bigcommerce.com) * [Customers Overview](https://developer.bigcommerce.com/api-docs/customers/customers-subscribers-overview) * [Working with Storefront APIs](https://developer.bigcommerce.com/api-docs/cart-and-checkout/working-sf-apis)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionRequest
 */
export interface SubscriptionRequest {
    /**
     * Email of subscriber
     * @type {string}
     * @memberof SubscriptionRequest
     */
    email?: string;
    /**
     * Has subscriber provided consent for receiving Marketing emails.
     * @type {boolean}
     * @memberof SubscriptionRequest
     */
    acceptsMarketingNewsletter?: boolean;
    /**
     * Has subscriber provided consent for receiving Abandon Cart emails.
     * @type {boolean}
     * @memberof SubscriptionRequest
     */
    acceptsAbandonedCartEmails?: boolean;
}

export function SubscriptionRequestFromJSON(json: any): SubscriptionRequest {
    return SubscriptionRequestFromJSONTyped(json, false);
}

export function SubscriptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'acceptsMarketingNewsletter': !exists(json, 'acceptsMarketingNewsletter') ? undefined : json['acceptsMarketingNewsletter'],
        'acceptsAbandonedCartEmails': !exists(json, 'acceptsAbandonedCartEmails') ? undefined : json['acceptsAbandonedCartEmails'],
    };
}

export function SubscriptionRequestToJSON(value?: SubscriptionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'acceptsMarketingNewsletter': value.acceptsMarketingNewsletter,
        'acceptsAbandonedCartEmails': value.acceptsAbandonedCartEmails,
    };
}


