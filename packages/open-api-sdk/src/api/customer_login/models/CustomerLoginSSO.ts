/* tslint:disable */
/* eslint-disable */
/**
 * Customer Login (SSO)
 * Enable single sign-on for shoppers on BigCommerce hosted storefronts.  [Learn more about the customer login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api).
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerLoginSSO
 */
export interface CustomerLoginSSO {
    /**
     * Indicates the token’s issuer. This is your application’s client ID, which is obtained during application registration in Developer Portal.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    iss?: string;
    /**
     * Time when the token was generated. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).
     * @type {number}
     * @memberof CustomerLoginSSO
     */
    iat?: number;
    /**
     * Request ID string that must be unique across all requests made by your app. A UUID or other random string would be an appropriate value. Most libraries contain a method for generating a uuid. For testing a [UUID generator](https://www.uuidgenerator.net/) can be used, but it recommended to use built in libraries.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    jti?: string;
    /**
     * Must contain the string “customer_login”.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    operation?: string;
    /**
     * Store hash identifying the store you are logging into.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    storeHash?: string;
    /**
     * ID of the customer you are logging in, as obtained through the Customer API.
     * @type {number}
     * @memberof CustomerLoginSSO
     */
    customerId?: number;
    /**
     * Optional field containing a relative path for the shopper’s destination after login. Will default to `/account.php`.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    redirectTo?: string;
    /**
     * **(Optional)** Field containing the expected IP address for the request. If provided, BigCommerce will check that it matches the browser trying to log in. If there is not a match, it will be rejected.
     * @type {string}
     * @memberof CustomerLoginSSO
     */
    requestIp?: string;
}

export function CustomerLoginSSOFromJSON(json: any): CustomerLoginSSO {
    return CustomerLoginSSOFromJSONTyped(json, false);
}

export function CustomerLoginSSOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerLoginSSO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iss': !exists(json, 'iss') ? undefined : json['iss'],
        'iat': !exists(json, 'iat') ? undefined : json['iat'],
        'jti': !exists(json, 'jti') ? undefined : json['jti'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'storeHash': !exists(json, 'store_hash') ? undefined : json['store_hash'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'redirectTo': !exists(json, 'redirect_to') ? undefined : json['redirect_to'],
        'requestIp': !exists(json, 'request_ip') ? undefined : json['request_ip'],
    };
}

export function CustomerLoginSSOToJSON(value?: CustomerLoginSSO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iss': value.iss,
        'iat': value.iat,
        'jti': value.jti,
        'operation': value.operation,
        'store_hash': value.storeHash,
        'customer_id': value.customerId,
        'redirect_to': value.redirectTo,
        'request_ip': value.requestIp,
    };
}


