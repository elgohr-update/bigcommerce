/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Carts
 * Manage cart operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
 *
 * The version of the OpenAPI document: Storefront
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResponseCartLineItemsCustomItems,
    ResponseCartLineItemsCustomItemsFromJSON,
    ResponseCartLineItemsCustomItemsFromJSONTyped,
    ResponseCartLineItemsCustomItemsToJSON,
    ResponseCartLineItemsDigitalItems,
    ResponseCartLineItemsDigitalItemsFromJSON,
    ResponseCartLineItemsDigitalItemsFromJSONTyped,
    ResponseCartLineItemsDigitalItemsToJSON,
    ResponseCartLineItemsGiftCertificates,
    ResponseCartLineItemsGiftCertificatesFromJSON,
    ResponseCartLineItemsGiftCertificatesFromJSONTyped,
    ResponseCartLineItemsGiftCertificatesToJSON,
    ResponseCartLineItemsItemsPhysicalItemsItems,
    ResponseCartLineItemsItemsPhysicalItemsItemsFromJSON,
    ResponseCartLineItemsItemsPhysicalItemsItemsFromJSONTyped,
    ResponseCartLineItemsItemsPhysicalItemsItemsToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseCartLineItems
 */
export interface ResponseCartLineItems {
    /**
     * 
     * @type {Array<ResponseCartLineItemsCustomItems>}
     * @memberof ResponseCartLineItems
     */
    customItems?: Array<ResponseCartLineItemsCustomItems>;
    /**
     * Array of `ItemDigital` objects.
     * @type {Array<ResponseCartLineItemsDigitalItems>}
     * @memberof ResponseCartLineItems
     */
    digitalItems?: Array<ResponseCartLineItemsDigitalItems>;
    /**
     * Array of `ItemGiftCertificate` objects.
     * @type {Array<ResponseCartLineItemsGiftCertificates>}
     * @memberof ResponseCartLineItems
     */
    giftCertificates?: Array<ResponseCartLineItemsGiftCertificates>;
    /**
     * Array of `ItemPhysical` objects.
     * @type {Array<ResponseCartLineItemsItemsPhysicalItemsItems>}
     * @memberof ResponseCartLineItems
     */
    physicalItems?: Array<ResponseCartLineItemsItemsPhysicalItemsItems>;
}

export function ResponseCartLineItemsFromJSON(json: any): ResponseCartLineItems {
    return ResponseCartLineItemsFromJSONTyped(json, false);
}

export function ResponseCartLineItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseCartLineItems {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customItems': !exists(json, 'customItems') ? undefined : ((json['customItems'] as Array<any>).map(ResponseCartLineItemsCustomItemsFromJSON)),
        'digitalItems': !exists(json, 'digitalItems') ? undefined : ((json['digitalItems'] as Array<any>).map(ResponseCartLineItemsDigitalItemsFromJSON)),
        'giftCertificates': !exists(json, 'giftCertificates') ? undefined : ((json['giftCertificates'] as Array<any>).map(ResponseCartLineItemsGiftCertificatesFromJSON)),
        'physicalItems': !exists(json, 'physicalItems') ? undefined : ((json['physicalItems'] as Array<any>).map(ResponseCartLineItemsItemsPhysicalItemsItemsFromJSON)),
    };
}

export function ResponseCartLineItemsToJSON(value?: ResponseCartLineItems | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customItems': value.customItems === undefined ? undefined : ((value.customItems as Array<any>).map(ResponseCartLineItemsCustomItemsToJSON)),
        'digitalItems': value.digitalItems === undefined ? undefined : ((value.digitalItems as Array<any>).map(ResponseCartLineItemsDigitalItemsToJSON)),
        'giftCertificates': value.giftCertificates === undefined ? undefined : ((value.giftCertificates as Array<any>).map(ResponseCartLineItemsGiftCertificatesToJSON)),
        'physicalItems': value.physicalItems === undefined ? undefined : ((value.physicalItems as Array<any>).map(ResponseCartLineItemsItemsPhysicalItemsItemsToJSON)),
    };
}


