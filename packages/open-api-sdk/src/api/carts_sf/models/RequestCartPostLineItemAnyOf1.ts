/* tslint:disable */
/* eslint-disable */
/**
 * Storefront Carts
 * Manage cart operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.
 *
 * The version of the OpenAPI document: Storefront
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestCartPostLineItemAnyOf1
 */
export interface RequestCartPostLineItemAnyOf1 {
    /**
     * ID of the product.
     * @type {number}
     * @memberof RequestCartPostLineItemAnyOf1
     */
    productId: number;
    /**
     * Quantity of this item.
     * @type {number}
     * @memberof RequestCartPostLineItemAnyOf1
     */
    quantity: number;
    /**
     * ID of the variant.
     * @type {number}
     * @memberof RequestCartPostLineItemAnyOf1
     */
    variantId: number;
}

export function RequestCartPostLineItemAnyOf1FromJSON(json: any): RequestCartPostLineItemAnyOf1 {
    return RequestCartPostLineItemAnyOf1FromJSONTyped(json, false);
}

export function RequestCartPostLineItemAnyOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestCartPostLineItemAnyOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productId': json['productId'],
        'quantity': json['quantity'],
        'variantId': json['variantId'],
    };
}

export function RequestCartPostLineItemAnyOf1ToJSON(value?: RequestCartPostLineItemAnyOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productId': value.productId,
        'quantity': value.quantity,
        'variantId': value.variantId,
    };
}


